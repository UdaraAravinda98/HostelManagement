//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace hostelloginpage {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("HostelDBDataSet2")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class HostelDBDataSet2 : global::System.Data.DataSet {
        
        private AssertDataTable tableAssert;
        
        private AssetsDataTable tableAssets;
        
        private StaffDetailsDataTable tableStaffDetails;
        
        private StudentDataTable tableStudent;
        
        private StudentDetailDataTable tableStudentDetail;
        
        private StuDetailsDataTable tableStuDetails;
        
        private UserRegisterDataTable tableUserRegister;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public HostelDBDataSet2() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected HostelDBDataSet2(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Assert"] != null)) {
                    base.Tables.Add(new AssertDataTable(ds.Tables["Assert"]));
                }
                if ((ds.Tables["Assets"] != null)) {
                    base.Tables.Add(new AssetsDataTable(ds.Tables["Assets"]));
                }
                if ((ds.Tables["StaffDetails"] != null)) {
                    base.Tables.Add(new StaffDetailsDataTable(ds.Tables["StaffDetails"]));
                }
                if ((ds.Tables["Student"] != null)) {
                    base.Tables.Add(new StudentDataTable(ds.Tables["Student"]));
                }
                if ((ds.Tables["StudentDetail"] != null)) {
                    base.Tables.Add(new StudentDetailDataTable(ds.Tables["StudentDetail"]));
                }
                if ((ds.Tables["StuDetails"] != null)) {
                    base.Tables.Add(new StuDetailsDataTable(ds.Tables["StuDetails"]));
                }
                if ((ds.Tables["UserRegister"] != null)) {
                    base.Tables.Add(new UserRegisterDataTable(ds.Tables["UserRegister"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AssertDataTable Assert {
            get {
                return this.tableAssert;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AssetsDataTable Assets {
            get {
                return this.tableAssets;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StaffDetailsDataTable StaffDetails {
            get {
                return this.tableStaffDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StudentDataTable Student {
            get {
                return this.tableStudent;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StudentDetailDataTable StudentDetail {
            get {
                return this.tableStudentDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StuDetailsDataTable StuDetails {
            get {
                return this.tableStuDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UserRegisterDataTable UserRegister {
            get {
                return this.tableUserRegister;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            HostelDBDataSet2 cln = ((HostelDBDataSet2)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Assert"] != null)) {
                    base.Tables.Add(new AssertDataTable(ds.Tables["Assert"]));
                }
                if ((ds.Tables["Assets"] != null)) {
                    base.Tables.Add(new AssetsDataTable(ds.Tables["Assets"]));
                }
                if ((ds.Tables["StaffDetails"] != null)) {
                    base.Tables.Add(new StaffDetailsDataTable(ds.Tables["StaffDetails"]));
                }
                if ((ds.Tables["Student"] != null)) {
                    base.Tables.Add(new StudentDataTable(ds.Tables["Student"]));
                }
                if ((ds.Tables["StudentDetail"] != null)) {
                    base.Tables.Add(new StudentDetailDataTable(ds.Tables["StudentDetail"]));
                }
                if ((ds.Tables["StuDetails"] != null)) {
                    base.Tables.Add(new StuDetailsDataTable(ds.Tables["StuDetails"]));
                }
                if ((ds.Tables["UserRegister"] != null)) {
                    base.Tables.Add(new UserRegisterDataTable(ds.Tables["UserRegister"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableAssert = ((AssertDataTable)(base.Tables["Assert"]));
            if ((initTable == true)) {
                if ((this.tableAssert != null)) {
                    this.tableAssert.InitVars();
                }
            }
            this.tableAssets = ((AssetsDataTable)(base.Tables["Assets"]));
            if ((initTable == true)) {
                if ((this.tableAssets != null)) {
                    this.tableAssets.InitVars();
                }
            }
            this.tableStaffDetails = ((StaffDetailsDataTable)(base.Tables["StaffDetails"]));
            if ((initTable == true)) {
                if ((this.tableStaffDetails != null)) {
                    this.tableStaffDetails.InitVars();
                }
            }
            this.tableStudent = ((StudentDataTable)(base.Tables["Student"]));
            if ((initTable == true)) {
                if ((this.tableStudent != null)) {
                    this.tableStudent.InitVars();
                }
            }
            this.tableStudentDetail = ((StudentDetailDataTable)(base.Tables["StudentDetail"]));
            if ((initTable == true)) {
                if ((this.tableStudentDetail != null)) {
                    this.tableStudentDetail.InitVars();
                }
            }
            this.tableStuDetails = ((StuDetailsDataTable)(base.Tables["StuDetails"]));
            if ((initTable == true)) {
                if ((this.tableStuDetails != null)) {
                    this.tableStuDetails.InitVars();
                }
            }
            this.tableUserRegister = ((UserRegisterDataTable)(base.Tables["UserRegister"]));
            if ((initTable == true)) {
                if ((this.tableUserRegister != null)) {
                    this.tableUserRegister.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "HostelDBDataSet2";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/HostelDBDataSet2.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableAssert = new AssertDataTable();
            base.Tables.Add(this.tableAssert);
            this.tableAssets = new AssetsDataTable();
            base.Tables.Add(this.tableAssets);
            this.tableStaffDetails = new StaffDetailsDataTable();
            base.Tables.Add(this.tableStaffDetails);
            this.tableStudent = new StudentDataTable();
            base.Tables.Add(this.tableStudent);
            this.tableStudentDetail = new StudentDetailDataTable();
            base.Tables.Add(this.tableStudentDetail);
            this.tableStuDetails = new StuDetailsDataTable();
            base.Tables.Add(this.tableStuDetails);
            this.tableUserRegister = new UserRegisterDataTable();
            base.Tables.Add(this.tableUserRegister);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeAssert() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeAssets() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeStaffDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeStudent() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeStudentDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeStuDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeUserRegister() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            HostelDBDataSet2 ds = new HostelDBDataSet2();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void AssertRowChangeEventHandler(object sender, AssertRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void AssetsRowChangeEventHandler(object sender, AssetsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void StaffDetailsRowChangeEventHandler(object sender, StaffDetailsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void StudentRowChangeEventHandler(object sender, StudentRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void StudentDetailRowChangeEventHandler(object sender, StudentDetailRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void StuDetailsRowChangeEventHandler(object sender, StuDetailsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void UserRegisterRowChangeEventHandler(object sender, UserRegisterRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AssertDataTable : global::System.Data.TypedTableBase<AssertRow> {
            
            private global::System.Data.DataColumn columnRoomId;
            
            private global::System.Data.DataColumn columnFloor;
            
            private global::System.Data.DataColumn columnRoom_no;
            
            private global::System.Data.DataColumn columnFrontkey;
            
            private global::System.Data.DataColumn columnBackkey;
            
            private global::System.Data.DataColumn columnBeds;
            
            private global::System.Data.DataColumn columnMattress;
            
            private global::System.Data.DataColumn columnTables;
            
            private global::System.Data.DataColumn columnChairs;
            
            private global::System.Data.DataColumn columnFans;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public AssertDataTable() {
                this.TableName = "Assert";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal AssertDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected AssertDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RoomIdColumn {
                get {
                    return this.columnRoomId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FloorColumn {
                get {
                    return this.columnFloor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Room_noColumn {
                get {
                    return this.columnRoom_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FrontkeyColumn {
                get {
                    return this.columnFrontkey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BackkeyColumn {
                get {
                    return this.columnBackkey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BedsColumn {
                get {
                    return this.columnBeds;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MattressColumn {
                get {
                    return this.columnMattress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TablesColumn {
                get {
                    return this.columnTables;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ChairsColumn {
                get {
                    return this.columnChairs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FansColumn {
                get {
                    return this.columnFans;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public AssertRow this[int index] {
                get {
                    return ((AssertRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event AssertRowChangeEventHandler AssertRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event AssertRowChangeEventHandler AssertRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event AssertRowChangeEventHandler AssertRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event AssertRowChangeEventHandler AssertRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddAssertRow(AssertRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public AssertRow AddAssertRow(string RoomId, string Floor, int Room_no, int Frontkey, int Backkey, int Beds, int Mattress, int Tables, int Chairs, int Fans) {
                AssertRow rowAssertRow = ((AssertRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RoomId,
                        Floor,
                        Room_no,
                        Frontkey,
                        Backkey,
                        Beds,
                        Mattress,
                        Tables,
                        Chairs,
                        Fans};
                rowAssertRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAssertRow);
                return rowAssertRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public AssertRow FindByRoomId(string RoomId) {
                return ((AssertRow)(this.Rows.Find(new object[] {
                            RoomId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AssertDataTable cln = ((AssertDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AssertDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnRoomId = base.Columns["RoomId"];
                this.columnFloor = base.Columns["Floor"];
                this.columnRoom_no = base.Columns["Room_no"];
                this.columnFrontkey = base.Columns["Frontkey"];
                this.columnBackkey = base.Columns["Backkey"];
                this.columnBeds = base.Columns["Beds"];
                this.columnMattress = base.Columns["Mattress"];
                this.columnTables = base.Columns["Tables"];
                this.columnChairs = base.Columns["Chairs"];
                this.columnFans = base.Columns["Fans"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnRoomId = new global::System.Data.DataColumn("RoomId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoomId);
                this.columnFloor = new global::System.Data.DataColumn("Floor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFloor);
                this.columnRoom_no = new global::System.Data.DataColumn("Room_no", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoom_no);
                this.columnFrontkey = new global::System.Data.DataColumn("Frontkey", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrontkey);
                this.columnBackkey = new global::System.Data.DataColumn("Backkey", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBackkey);
                this.columnBeds = new global::System.Data.DataColumn("Beds", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBeds);
                this.columnMattress = new global::System.Data.DataColumn("Mattress", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMattress);
                this.columnTables = new global::System.Data.DataColumn("Tables", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTables);
                this.columnChairs = new global::System.Data.DataColumn("Chairs", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChairs);
                this.columnFans = new global::System.Data.DataColumn("Fans", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFans);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRoomId}, true));
                this.columnRoomId.AllowDBNull = false;
                this.columnRoomId.Unique = true;
                this.columnRoomId.MaxLength = 50;
                this.columnFloor.AllowDBNull = false;
                this.columnFloor.MaxLength = 50;
                this.columnRoom_no.AllowDBNull = false;
                this.columnFrontkey.AllowDBNull = false;
                this.columnBackkey.AllowDBNull = false;
                this.columnBeds.AllowDBNull = false;
                this.columnMattress.AllowDBNull = false;
                this.columnTables.AllowDBNull = false;
                this.columnChairs.AllowDBNull = false;
                this.columnFans.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public AssertRow NewAssertRow() {
                return ((AssertRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AssertRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AssertRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AssertRowChanged != null)) {
                    this.AssertRowChanged(this, new AssertRowChangeEvent(((AssertRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AssertRowChanging != null)) {
                    this.AssertRowChanging(this, new AssertRowChangeEvent(((AssertRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AssertRowDeleted != null)) {
                    this.AssertRowDeleted(this, new AssertRowChangeEvent(((AssertRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AssertRowDeleting != null)) {
                    this.AssertRowDeleting(this, new AssertRowChangeEvent(((AssertRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveAssertRow(AssertRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HostelDBDataSet2 ds = new HostelDBDataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AssertDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AssetsDataTable : global::System.Data.TypedTableBase<AssetsRow> {
            
            private global::System.Data.DataColumn columnRoomId;
            
            private global::System.Data.DataColumn columnFloor;
            
            private global::System.Data.DataColumn columnRoom_no;
            
            private global::System.Data.DataColumn columnFrontkey;
            
            private global::System.Data.DataColumn columnBackkey;
            
            private global::System.Data.DataColumn columnBeds;
            
            private global::System.Data.DataColumn columnMattress;
            
            private global::System.Data.DataColumn columnTables;
            
            private global::System.Data.DataColumn columnChairs;
            
            private global::System.Data.DataColumn columnFans;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public AssetsDataTable() {
                this.TableName = "Assets";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal AssetsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected AssetsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RoomIdColumn {
                get {
                    return this.columnRoomId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FloorColumn {
                get {
                    return this.columnFloor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Room_noColumn {
                get {
                    return this.columnRoom_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FrontkeyColumn {
                get {
                    return this.columnFrontkey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BackkeyColumn {
                get {
                    return this.columnBackkey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BedsColumn {
                get {
                    return this.columnBeds;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MattressColumn {
                get {
                    return this.columnMattress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TablesColumn {
                get {
                    return this.columnTables;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ChairsColumn {
                get {
                    return this.columnChairs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FansColumn {
                get {
                    return this.columnFans;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public AssetsRow this[int index] {
                get {
                    return ((AssetsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event AssetsRowChangeEventHandler AssetsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event AssetsRowChangeEventHandler AssetsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event AssetsRowChangeEventHandler AssetsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event AssetsRowChangeEventHandler AssetsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddAssetsRow(AssetsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public AssetsRow AddAssetsRow(string RoomId, string Floor, int Room_no, int Frontkey, int Backkey, int Beds, int Mattress, int Tables, int Chairs, int Fans) {
                AssetsRow rowAssetsRow = ((AssetsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RoomId,
                        Floor,
                        Room_no,
                        Frontkey,
                        Backkey,
                        Beds,
                        Mattress,
                        Tables,
                        Chairs,
                        Fans};
                rowAssetsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAssetsRow);
                return rowAssetsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public AssetsRow FindByRoomId(string RoomId) {
                return ((AssetsRow)(this.Rows.Find(new object[] {
                            RoomId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AssetsDataTable cln = ((AssetsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AssetsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnRoomId = base.Columns["RoomId"];
                this.columnFloor = base.Columns["Floor"];
                this.columnRoom_no = base.Columns["Room_no"];
                this.columnFrontkey = base.Columns["Frontkey"];
                this.columnBackkey = base.Columns["Backkey"];
                this.columnBeds = base.Columns["Beds"];
                this.columnMattress = base.Columns["Mattress"];
                this.columnTables = base.Columns["Tables"];
                this.columnChairs = base.Columns["Chairs"];
                this.columnFans = base.Columns["Fans"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnRoomId = new global::System.Data.DataColumn("RoomId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoomId);
                this.columnFloor = new global::System.Data.DataColumn("Floor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFloor);
                this.columnRoom_no = new global::System.Data.DataColumn("Room_no", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoom_no);
                this.columnFrontkey = new global::System.Data.DataColumn("Frontkey", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrontkey);
                this.columnBackkey = new global::System.Data.DataColumn("Backkey", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBackkey);
                this.columnBeds = new global::System.Data.DataColumn("Beds", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBeds);
                this.columnMattress = new global::System.Data.DataColumn("Mattress", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMattress);
                this.columnTables = new global::System.Data.DataColumn("Tables", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTables);
                this.columnChairs = new global::System.Data.DataColumn("Chairs", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChairs);
                this.columnFans = new global::System.Data.DataColumn("Fans", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFans);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRoomId}, true));
                this.columnRoomId.AllowDBNull = false;
                this.columnRoomId.Unique = true;
                this.columnRoomId.MaxLength = 50;
                this.columnFloor.AllowDBNull = false;
                this.columnFloor.MaxLength = 50;
                this.columnRoom_no.AllowDBNull = false;
                this.columnFrontkey.AllowDBNull = false;
                this.columnBackkey.AllowDBNull = false;
                this.columnBeds.AllowDBNull = false;
                this.columnMattress.AllowDBNull = false;
                this.columnTables.AllowDBNull = false;
                this.columnChairs.AllowDBNull = false;
                this.columnFans.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public AssetsRow NewAssetsRow() {
                return ((AssetsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AssetsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AssetsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AssetsRowChanged != null)) {
                    this.AssetsRowChanged(this, new AssetsRowChangeEvent(((AssetsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AssetsRowChanging != null)) {
                    this.AssetsRowChanging(this, new AssetsRowChangeEvent(((AssetsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AssetsRowDeleted != null)) {
                    this.AssetsRowDeleted(this, new AssetsRowChangeEvent(((AssetsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AssetsRowDeleting != null)) {
                    this.AssetsRowDeleting(this, new AssetsRowChangeEvent(((AssetsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveAssetsRow(AssetsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HostelDBDataSet2 ds = new HostelDBDataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AssetsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StaffDetailsDataTable : global::System.Data.TypedTableBase<StaffDetailsRow> {
            
            private global::System.Data.DataColumn columnEmpId;
            
            private global::System.Data.DataColumn columnFullname;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnCategory;
            
            private global::System.Data.DataColumn columnJoined;
            
            private global::System.Data.DataColumn columnSex;
            
            private global::System.Data.DataColumn columnNIC;
            
            private global::System.Data.DataColumn columnDOB;
            
            private global::System.Data.DataColumn columnContact;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnEmName;
            
            private global::System.Data.DataColumn columnEmAddress;
            
            private global::System.Data.DataColumn columnEmPhone;
            
            private global::System.Data.DataColumn columnEmRel;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StaffDetailsDataTable() {
                this.TableName = "StaffDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal StaffDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected StaffDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EmpIdColumn {
                get {
                    return this.columnEmpId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FullnameColumn {
                get {
                    return this.columnFullname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CategoryColumn {
                get {
                    return this.columnCategory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn JoinedColumn {
                get {
                    return this.columnJoined;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SexColumn {
                get {
                    return this.columnSex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NICColumn {
                get {
                    return this.columnNIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DOBColumn {
                get {
                    return this.columnDOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ContactColumn {
                get {
                    return this.columnContact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EmNameColumn {
                get {
                    return this.columnEmName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EmAddressColumn {
                get {
                    return this.columnEmAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EmPhoneColumn {
                get {
                    return this.columnEmPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EmRelColumn {
                get {
                    return this.columnEmRel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StaffDetailsRow this[int index] {
                get {
                    return ((StaffDetailsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StaffDetailsRowChangeEventHandler StaffDetailsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StaffDetailsRowChangeEventHandler StaffDetailsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StaffDetailsRowChangeEventHandler StaffDetailsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StaffDetailsRowChangeEventHandler StaffDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddStaffDetailsRow(StaffDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StaffDetailsRow AddStaffDetailsRow(string EmpId, string Fullname, string Address, string Category, string Joined, string Sex, string NIC, string DOB, string Contact, string Email, string EmName, string EmAddress, string EmPhone, string EmRel) {
                StaffDetailsRow rowStaffDetailsRow = ((StaffDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EmpId,
                        Fullname,
                        Address,
                        Category,
                        Joined,
                        Sex,
                        NIC,
                        DOB,
                        Contact,
                        Email,
                        EmName,
                        EmAddress,
                        EmPhone,
                        EmRel};
                rowStaffDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStaffDetailsRow);
                return rowStaffDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StaffDetailsRow FindByEmpId(string EmpId) {
                return ((StaffDetailsRow)(this.Rows.Find(new object[] {
                            EmpId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                StaffDetailsDataTable cln = ((StaffDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StaffDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnEmpId = base.Columns["EmpId"];
                this.columnFullname = base.Columns["Fullname"];
                this.columnAddress = base.Columns["Address"];
                this.columnCategory = base.Columns["Category"];
                this.columnJoined = base.Columns["Joined"];
                this.columnSex = base.Columns["Sex"];
                this.columnNIC = base.Columns["NIC"];
                this.columnDOB = base.Columns["DOB"];
                this.columnContact = base.Columns["Contact"];
                this.columnEmail = base.Columns["Email"];
                this.columnEmName = base.Columns["EmName"];
                this.columnEmAddress = base.Columns["EmAddress"];
                this.columnEmPhone = base.Columns["EmPhone"];
                this.columnEmRel = base.Columns["EmRel"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnEmpId = new global::System.Data.DataColumn("EmpId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpId);
                this.columnFullname = new global::System.Data.DataColumn("Fullname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullname);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnCategory = new global::System.Data.DataColumn("Category", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategory);
                this.columnJoined = new global::System.Data.DataColumn("Joined", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJoined);
                this.columnSex = new global::System.Data.DataColumn("Sex", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSex);
                this.columnNIC = new global::System.Data.DataColumn("NIC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNIC);
                this.columnDOB = new global::System.Data.DataColumn("DOB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOB);
                this.columnContact = new global::System.Data.DataColumn("Contact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContact);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnEmName = new global::System.Data.DataColumn("EmName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmName);
                this.columnEmAddress = new global::System.Data.DataColumn("EmAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmAddress);
                this.columnEmPhone = new global::System.Data.DataColumn("EmPhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmPhone);
                this.columnEmRel = new global::System.Data.DataColumn("EmRel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmRel);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEmpId}, true));
                this.columnEmpId.AllowDBNull = false;
                this.columnEmpId.Unique = true;
                this.columnEmpId.MaxLength = 50;
                this.columnFullname.AllowDBNull = false;
                this.columnFullname.MaxLength = 50;
                this.columnAddress.AllowDBNull = false;
                this.columnAddress.MaxLength = 50;
                this.columnCategory.AllowDBNull = false;
                this.columnCategory.MaxLength = 50;
                this.columnJoined.AllowDBNull = false;
                this.columnJoined.MaxLength = 50;
                this.columnSex.AllowDBNull = false;
                this.columnSex.MaxLength = 50;
                this.columnNIC.AllowDBNull = false;
                this.columnNIC.MaxLength = 50;
                this.columnDOB.AllowDBNull = false;
                this.columnDOB.MaxLength = 50;
                this.columnContact.AllowDBNull = false;
                this.columnContact.MaxLength = 50;
                this.columnEmail.AllowDBNull = false;
                this.columnEmail.MaxLength = 50;
                this.columnEmName.AllowDBNull = false;
                this.columnEmName.MaxLength = 50;
                this.columnEmAddress.AllowDBNull = false;
                this.columnEmAddress.MaxLength = 50;
                this.columnEmPhone.AllowDBNull = false;
                this.columnEmPhone.MaxLength = 50;
                this.columnEmRel.AllowDBNull = false;
                this.columnEmRel.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StaffDetailsRow NewStaffDetailsRow() {
                return ((StaffDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StaffDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(StaffDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StaffDetailsRowChanged != null)) {
                    this.StaffDetailsRowChanged(this, new StaffDetailsRowChangeEvent(((StaffDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StaffDetailsRowChanging != null)) {
                    this.StaffDetailsRowChanging(this, new StaffDetailsRowChangeEvent(((StaffDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StaffDetailsRowDeleted != null)) {
                    this.StaffDetailsRowDeleted(this, new StaffDetailsRowChangeEvent(((StaffDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StaffDetailsRowDeleting != null)) {
                    this.StaffDetailsRowDeleting(this, new StaffDetailsRowChangeEvent(((StaffDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveStaffDetailsRow(StaffDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HostelDBDataSet2 ds = new HostelDBDataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StaffDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StudentDataTable : global::System.Data.TypedTableBase<StudentRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnRegno;
            
            private global::System.Data.DataColumn columnFullname;
            
            private global::System.Data.DataColumn columnSurname;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnDistrict;
            
            private global::System.Data.DataColumn columnGSdivision;
            
            private global::System.Data.DataColumn columnDSdivision;
            
            private global::System.Data.DataColumn columnSex;
            
            private global::System.Data.DataColumn columnNICno;
            
            private global::System.Data.DataColumn columnDOB;
            
            private global::System.Data.DataColumn columnFaculty;
            
            private global::System.Data.DataColumn columnCourse;
            
            private global::System.Data.DataColumn columnYearofstudy;
            
            private global::System.Data.DataColumn columnContact;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnMedicalhistory;
            
            private global::System.Data.DataColumn columnGuardianname;
            
            private global::System.Data.DataColumn columnGuardianrelationship;
            
            private global::System.Data.DataColumn columnGuardianAddress;
            
            private global::System.Data.DataColumn columnGuardiancontact;
            
            private global::System.Data.DataColumn columnNearbypolice;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentDataTable() {
                this.TableName = "Student";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal StudentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected StudentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RegnoColumn {
                get {
                    return this.columnRegno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FullnameColumn {
                get {
                    return this.columnFullname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SurnameColumn {
                get {
                    return this.columnSurname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DistrictColumn {
                get {
                    return this.columnDistrict;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GSdivisionColumn {
                get {
                    return this.columnGSdivision;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DSdivisionColumn {
                get {
                    return this.columnDSdivision;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SexColumn {
                get {
                    return this.columnSex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NICnoColumn {
                get {
                    return this.columnNICno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DOBColumn {
                get {
                    return this.columnDOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FacultyColumn {
                get {
                    return this.columnFaculty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CourseColumn {
                get {
                    return this.columnCourse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn YearofstudyColumn {
                get {
                    return this.columnYearofstudy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ContactColumn {
                get {
                    return this.columnContact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MedicalhistoryColumn {
                get {
                    return this.columnMedicalhistory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GuardiannameColumn {
                get {
                    return this.columnGuardianname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GuardianrelationshipColumn {
                get {
                    return this.columnGuardianrelationship;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GuardianAddressColumn {
                get {
                    return this.columnGuardianAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GuardiancontactColumn {
                get {
                    return this.columnGuardiancontact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NearbypoliceColumn {
                get {
                    return this.columnNearbypolice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentRow this[int index] {
                get {
                    return ((StudentRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StudentRowChangeEventHandler StudentRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StudentRowChangeEventHandler StudentRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StudentRowChangeEventHandler StudentRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StudentRowChangeEventHandler StudentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddStudentRow(StudentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentRow AddStudentRow(
                        string Regno, 
                        string Fullname, 
                        string Surname, 
                        string Address, 
                        string District, 
                        string GSdivision, 
                        string DSdivision, 
                        string Sex, 
                        string NICno, 
                        string DOB, 
                        string Faculty, 
                        string Course, 
                        string Yearofstudy, 
                        string Contact, 
                        string Email, 
                        string Medicalhistory, 
                        string Guardianname, 
                        string Guardianrelationship, 
                        string GuardianAddress, 
                        string Guardiancontact, 
                        string Nearbypolice) {
                StudentRow rowStudentRow = ((StudentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Regno,
                        Fullname,
                        Surname,
                        Address,
                        District,
                        GSdivision,
                        DSdivision,
                        Sex,
                        NICno,
                        DOB,
                        Faculty,
                        Course,
                        Yearofstudy,
                        Contact,
                        Email,
                        Medicalhistory,
                        Guardianname,
                        Guardianrelationship,
                        GuardianAddress,
                        Guardiancontact,
                        Nearbypolice};
                rowStudentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStudentRow);
                return rowStudentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentRow FindById(int Id) {
                return ((StudentRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                StudentDataTable cln = ((StudentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StudentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnRegno = base.Columns["Regno"];
                this.columnFullname = base.Columns["Fullname"];
                this.columnSurname = base.Columns["Surname"];
                this.columnAddress = base.Columns["Address"];
                this.columnDistrict = base.Columns["District"];
                this.columnGSdivision = base.Columns["GSdivision"];
                this.columnDSdivision = base.Columns["DSdivision"];
                this.columnSex = base.Columns["Sex"];
                this.columnNICno = base.Columns["NICno"];
                this.columnDOB = base.Columns["DOB"];
                this.columnFaculty = base.Columns["Faculty"];
                this.columnCourse = base.Columns["Course"];
                this.columnYearofstudy = base.Columns["Yearofstudy"];
                this.columnContact = base.Columns["Contact"];
                this.columnEmail = base.Columns["Email"];
                this.columnMedicalhistory = base.Columns["Medicalhistory"];
                this.columnGuardianname = base.Columns["Guardianname"];
                this.columnGuardianrelationship = base.Columns["Guardianrelationship"];
                this.columnGuardianAddress = base.Columns["GuardianAddress"];
                this.columnGuardiancontact = base.Columns["Guardiancontact"];
                this.columnNearbypolice = base.Columns["Nearbypolice"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnRegno = new global::System.Data.DataColumn("Regno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegno);
                this.columnFullname = new global::System.Data.DataColumn("Fullname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullname);
                this.columnSurname = new global::System.Data.DataColumn("Surname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSurname);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnDistrict = new global::System.Data.DataColumn("District", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrict);
                this.columnGSdivision = new global::System.Data.DataColumn("GSdivision", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGSdivision);
                this.columnDSdivision = new global::System.Data.DataColumn("DSdivision", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSdivision);
                this.columnSex = new global::System.Data.DataColumn("Sex", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSex);
                this.columnNICno = new global::System.Data.DataColumn("NICno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNICno);
                this.columnDOB = new global::System.Data.DataColumn("DOB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOB);
                this.columnFaculty = new global::System.Data.DataColumn("Faculty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFaculty);
                this.columnCourse = new global::System.Data.DataColumn("Course", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCourse);
                this.columnYearofstudy = new global::System.Data.DataColumn("Yearofstudy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYearofstudy);
                this.columnContact = new global::System.Data.DataColumn("Contact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContact);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnMedicalhistory = new global::System.Data.DataColumn("Medicalhistory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMedicalhistory);
                this.columnGuardianname = new global::System.Data.DataColumn("Guardianname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGuardianname);
                this.columnGuardianrelationship = new global::System.Data.DataColumn("Guardianrelationship", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGuardianrelationship);
                this.columnGuardianAddress = new global::System.Data.DataColumn("GuardianAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGuardianAddress);
                this.columnGuardiancontact = new global::System.Data.DataColumn("Guardiancontact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGuardiancontact);
                this.columnNearbypolice = new global::System.Data.DataColumn("Nearbypolice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNearbypolice);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnRegno.AllowDBNull = false;
                this.columnRegno.MaxLength = 50;
                this.columnFullname.AllowDBNull = false;
                this.columnFullname.MaxLength = 50;
                this.columnSurname.AllowDBNull = false;
                this.columnSurname.MaxLength = 50;
                this.columnAddress.AllowDBNull = false;
                this.columnAddress.MaxLength = 50;
                this.columnDistrict.AllowDBNull = false;
                this.columnDistrict.MaxLength = 50;
                this.columnGSdivision.AllowDBNull = false;
                this.columnGSdivision.MaxLength = 50;
                this.columnDSdivision.AllowDBNull = false;
                this.columnDSdivision.MaxLength = 50;
                this.columnSex.AllowDBNull = false;
                this.columnSex.MaxLength = 50;
                this.columnNICno.AllowDBNull = false;
                this.columnNICno.MaxLength = 50;
                this.columnDOB.AllowDBNull = false;
                this.columnDOB.MaxLength = 50;
                this.columnFaculty.AllowDBNull = false;
                this.columnFaculty.MaxLength = 50;
                this.columnCourse.AllowDBNull = false;
                this.columnCourse.MaxLength = 50;
                this.columnYearofstudy.AllowDBNull = false;
                this.columnYearofstudy.MaxLength = 50;
                this.columnContact.AllowDBNull = false;
                this.columnContact.MaxLength = 50;
                this.columnEmail.AllowDBNull = false;
                this.columnEmail.MaxLength = 50;
                this.columnMedicalhistory.AllowDBNull = false;
                this.columnMedicalhistory.MaxLength = 50;
                this.columnGuardianname.AllowDBNull = false;
                this.columnGuardianname.MaxLength = 50;
                this.columnGuardianrelationship.AllowDBNull = false;
                this.columnGuardianrelationship.MaxLength = 50;
                this.columnGuardianAddress.AllowDBNull = false;
                this.columnGuardianAddress.MaxLength = 50;
                this.columnGuardiancontact.AllowDBNull = false;
                this.columnGuardiancontact.MaxLength = 50;
                this.columnNearbypolice.AllowDBNull = false;
                this.columnNearbypolice.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentRow NewStudentRow() {
                return ((StudentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StudentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(StudentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StudentRowChanged != null)) {
                    this.StudentRowChanged(this, new StudentRowChangeEvent(((StudentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StudentRowChanging != null)) {
                    this.StudentRowChanging(this, new StudentRowChangeEvent(((StudentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StudentRowDeleted != null)) {
                    this.StudentRowDeleted(this, new StudentRowChangeEvent(((StudentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StudentRowDeleting != null)) {
                    this.StudentRowDeleting(this, new StudentRowChangeEvent(((StudentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveStudentRow(StudentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HostelDBDataSet2 ds = new HostelDBDataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StudentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StudentDetailDataTable : global::System.Data.TypedTableBase<StudentDetailRow> {
            
            private global::System.Data.DataColumn columnStudent_Reg_no;
            
            private global::System.Data.DataColumn columnFullname;
            
            private global::System.Data.DataColumn columnSurname;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnDistrict;
            
            private global::System.Data.DataColumn columnGS_Division;
            
            private global::System.Data.DataColumn columnDS_Division;
            
            private global::System.Data.DataColumn columnSex;
            
            private global::System.Data.DataColumn columnNIC_no;
            
            private global::System.Data.DataColumn columnDate_Of_Birth;
            
            private global::System.Data.DataColumn columnFaculty;
            
            private global::System.Data.DataColumn columnCourse;
            
            private global::System.Data.DataColumn columnYearofStudy;
            
            private global::System.Data.DataColumn columnContact_No;
            
            private global::System.Data.DataColumn _columnE_mail_ID;
            
            private global::System.Data.DataColumn columnMedicalHistrory;
            
            private global::System.Data.DataColumn columnGuardian_Name;
            
            private global::System.Data.DataColumn columnGuardian_Relationship;
            
            private global::System.Data.DataColumn columnGuardian_Address;
            
            private global::System.Data.DataColumn columnGuardian_contactno;
            
            private global::System.Data.DataColumn columnPolice_near;
            
            private global::System.Data.DataColumn columnFloor_no;
            
            private global::System.Data.DataColumn columnRoom;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentDetailDataTable() {
                this.TableName = "StudentDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal StudentDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected StudentDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Student_Reg_noColumn {
                get {
                    return this.columnStudent_Reg_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FullnameColumn {
                get {
                    return this.columnFullname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SurnameColumn {
                get {
                    return this.columnSurname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DistrictColumn {
                get {
                    return this.columnDistrict;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GS_DivisionColumn {
                get {
                    return this.columnGS_Division;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DS_DivisionColumn {
                get {
                    return this.columnDS_Division;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SexColumn {
                get {
                    return this.columnSex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NIC_noColumn {
                get {
                    return this.columnNIC_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Date_Of_BirthColumn {
                get {
                    return this.columnDate_Of_Birth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FacultyColumn {
                get {
                    return this.columnFaculty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CourseColumn {
                get {
                    return this.columnCourse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn YearofStudyColumn {
                get {
                    return this.columnYearofStudy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Contact_NoColumn {
                get {
                    return this.columnContact_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn _E_mail_IDColumn {
                get {
                    return this._columnE_mail_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MedicalHistroryColumn {
                get {
                    return this.columnMedicalHistrory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Guardian_NameColumn {
                get {
                    return this.columnGuardian_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Guardian_RelationshipColumn {
                get {
                    return this.columnGuardian_Relationship;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Guardian_AddressColumn {
                get {
                    return this.columnGuardian_Address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Guardian_contactnoColumn {
                get {
                    return this.columnGuardian_contactno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Police_nearColumn {
                get {
                    return this.columnPolice_near;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Floor_noColumn {
                get {
                    return this.columnFloor_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RoomColumn {
                get {
                    return this.columnRoom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentDetailRow this[int index] {
                get {
                    return ((StudentDetailRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StudentDetailRowChangeEventHandler StudentDetailRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StudentDetailRowChangeEventHandler StudentDetailRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StudentDetailRowChangeEventHandler StudentDetailRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StudentDetailRowChangeEventHandler StudentDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddStudentDetailRow(StudentDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentDetailRow AddStudentDetailRow(
                        string Student_Reg_no, 
                        string Fullname, 
                        string Surname, 
                        string Address, 
                        string District, 
                        string GS_Division, 
                        string DS_Division, 
                        string Sex, 
                        string NIC_no, 
                        string Date_Of_Birth, 
                        string Faculty, 
                        string Course, 
                        string YearofStudy, 
                        string Contact_No, 
                        string _E_mail_ID, 
                        string MedicalHistrory, 
                        string Guardian_Name, 
                        string Guardian_Relationship, 
                        string Guardian_Address, 
                        string Guardian_contactno, 
                        string Police_near, 
                        string Floor_no, 
                        int Room) {
                StudentDetailRow rowStudentDetailRow = ((StudentDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Student_Reg_no,
                        Fullname,
                        Surname,
                        Address,
                        District,
                        GS_Division,
                        DS_Division,
                        Sex,
                        NIC_no,
                        Date_Of_Birth,
                        Faculty,
                        Course,
                        YearofStudy,
                        Contact_No,
                        _E_mail_ID,
                        MedicalHistrory,
                        Guardian_Name,
                        Guardian_Relationship,
                        Guardian_Address,
                        Guardian_contactno,
                        Police_near,
                        Floor_no,
                        Room};
                rowStudentDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStudentDetailRow);
                return rowStudentDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentDetailRow FindByStudent_Reg_no(string Student_Reg_no) {
                return ((StudentDetailRow)(this.Rows.Find(new object[] {
                            Student_Reg_no})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                StudentDetailDataTable cln = ((StudentDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StudentDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnStudent_Reg_no = base.Columns["Student Reg_no"];
                this.columnFullname = base.Columns["Fullname"];
                this.columnSurname = base.Columns["Surname"];
                this.columnAddress = base.Columns["Address"];
                this.columnDistrict = base.Columns["District"];
                this.columnGS_Division = base.Columns["GS_Division"];
                this.columnDS_Division = base.Columns["DS_Division"];
                this.columnSex = base.Columns["Sex"];
                this.columnNIC_no = base.Columns["NIC_no"];
                this.columnDate_Of_Birth = base.Columns["Date_Of_Birth"];
                this.columnFaculty = base.Columns["Faculty"];
                this.columnCourse = base.Columns["Course"];
                this.columnYearofStudy = base.Columns["YearofStudy"];
                this.columnContact_No = base.Columns["Contact_No"];
                this._columnE_mail_ID = base.Columns["E-mail ID"];
                this.columnMedicalHistrory = base.Columns["MedicalHistrory"];
                this.columnGuardian_Name = base.Columns["Guardian_Name"];
                this.columnGuardian_Relationship = base.Columns["Guardian_Relationship"];
                this.columnGuardian_Address = base.Columns["Guardian_Address"];
                this.columnGuardian_contactno = base.Columns["Guardian_contactno"];
                this.columnPolice_near = base.Columns["Police_near"];
                this.columnFloor_no = base.Columns["Floor_no"];
                this.columnRoom = base.Columns["Room"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnStudent_Reg_no = new global::System.Data.DataColumn("Student Reg_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudent_Reg_no);
                this.columnFullname = new global::System.Data.DataColumn("Fullname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullname);
                this.columnSurname = new global::System.Data.DataColumn("Surname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSurname);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnDistrict = new global::System.Data.DataColumn("District", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrict);
                this.columnGS_Division = new global::System.Data.DataColumn("GS_Division", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGS_Division);
                this.columnDS_Division = new global::System.Data.DataColumn("DS_Division", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDS_Division);
                this.columnSex = new global::System.Data.DataColumn("Sex", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSex);
                this.columnNIC_no = new global::System.Data.DataColumn("NIC_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNIC_no);
                this.columnDate_Of_Birth = new global::System.Data.DataColumn("Date_Of_Birth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate_Of_Birth);
                this.columnFaculty = new global::System.Data.DataColumn("Faculty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFaculty);
                this.columnCourse = new global::System.Data.DataColumn("Course", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCourse);
                this.columnYearofStudy = new global::System.Data.DataColumn("YearofStudy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYearofStudy);
                this.columnContact_No = new global::System.Data.DataColumn("Contact_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContact_No);
                this._columnE_mail_ID = new global::System.Data.DataColumn("E-mail ID", typeof(string), null, global::System.Data.MappingType.Element);
                this._columnE_mail_ID.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnE_mail_ID");
                this._columnE_mail_ID.ExtendedProperties.Add("Generator_UserColumnName", "E-mail ID");
                base.Columns.Add(this._columnE_mail_ID);
                this.columnMedicalHistrory = new global::System.Data.DataColumn("MedicalHistrory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMedicalHistrory);
                this.columnGuardian_Name = new global::System.Data.DataColumn("Guardian_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGuardian_Name);
                this.columnGuardian_Relationship = new global::System.Data.DataColumn("Guardian_Relationship", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGuardian_Relationship);
                this.columnGuardian_Address = new global::System.Data.DataColumn("Guardian_Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGuardian_Address);
                this.columnGuardian_contactno = new global::System.Data.DataColumn("Guardian_contactno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGuardian_contactno);
                this.columnPolice_near = new global::System.Data.DataColumn("Police_near", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPolice_near);
                this.columnFloor_no = new global::System.Data.DataColumn("Floor_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFloor_no);
                this.columnRoom = new global::System.Data.DataColumn("Room", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoom);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnStudent_Reg_no}, true));
                this.columnStudent_Reg_no.AllowDBNull = false;
                this.columnStudent_Reg_no.Unique = true;
                this.columnStudent_Reg_no.MaxLength = 50;
                this.columnFullname.AllowDBNull = false;
                this.columnFullname.MaxLength = 50;
                this.columnSurname.AllowDBNull = false;
                this.columnSurname.MaxLength = 50;
                this.columnAddress.AllowDBNull = false;
                this.columnAddress.MaxLength = 50;
                this.columnDistrict.AllowDBNull = false;
                this.columnDistrict.MaxLength = 50;
                this.columnGS_Division.AllowDBNull = false;
                this.columnGS_Division.MaxLength = 50;
                this.columnDS_Division.AllowDBNull = false;
                this.columnDS_Division.MaxLength = 50;
                this.columnSex.AllowDBNull = false;
                this.columnSex.MaxLength = 50;
                this.columnNIC_no.AllowDBNull = false;
                this.columnNIC_no.MaxLength = 50;
                this.columnDate_Of_Birth.AllowDBNull = false;
                this.columnDate_Of_Birth.MaxLength = 50;
                this.columnFaculty.AllowDBNull = false;
                this.columnFaculty.MaxLength = 50;
                this.columnCourse.AllowDBNull = false;
                this.columnCourse.MaxLength = 50;
                this.columnYearofStudy.AllowDBNull = false;
                this.columnYearofStudy.MaxLength = 50;
                this.columnContact_No.AllowDBNull = false;
                this.columnContact_No.MaxLength = 50;
                this._columnE_mail_ID.AllowDBNull = false;
                this._columnE_mail_ID.MaxLength = 50;
                this.columnMedicalHistrory.AllowDBNull = false;
                this.columnMedicalHistrory.MaxLength = 50;
                this.columnGuardian_Name.AllowDBNull = false;
                this.columnGuardian_Name.MaxLength = 50;
                this.columnGuardian_Relationship.AllowDBNull = false;
                this.columnGuardian_Relationship.MaxLength = 50;
                this.columnGuardian_Address.AllowDBNull = false;
                this.columnGuardian_Address.MaxLength = 50;
                this.columnGuardian_contactno.AllowDBNull = false;
                this.columnGuardian_contactno.MaxLength = 50;
                this.columnPolice_near.AllowDBNull = false;
                this.columnPolice_near.MaxLength = 50;
                this.columnFloor_no.AllowDBNull = false;
                this.columnFloor_no.MaxLength = 50;
                this.columnRoom.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentDetailRow NewStudentDetailRow() {
                return ((StudentDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StudentDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(StudentDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StudentDetailRowChanged != null)) {
                    this.StudentDetailRowChanged(this, new StudentDetailRowChangeEvent(((StudentDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StudentDetailRowChanging != null)) {
                    this.StudentDetailRowChanging(this, new StudentDetailRowChangeEvent(((StudentDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StudentDetailRowDeleted != null)) {
                    this.StudentDetailRowDeleted(this, new StudentDetailRowChangeEvent(((StudentDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StudentDetailRowDeleting != null)) {
                    this.StudentDetailRowDeleting(this, new StudentDetailRowChangeEvent(((StudentDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveStudentDetailRow(StudentDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HostelDBDataSet2 ds = new HostelDBDataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StudentDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StuDetailsDataTable : global::System.Data.TypedTableBase<StuDetailsRow> {
            
            private global::System.Data.DataColumn columnRegno;
            
            private global::System.Data.DataColumn columnFullname;
            
            private global::System.Data.DataColumn columnSurname;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnDistrict;
            
            private global::System.Data.DataColumn columnGSDivision;
            
            private global::System.Data.DataColumn columnDSDivision;
            
            private global::System.Data.DataColumn columnSex;
            
            private global::System.Data.DataColumn columnNICno;
            
            private global::System.Data.DataColumn columnDateOfBirth;
            
            private global::System.Data.DataColumn columnFaculty;
            
            private global::System.Data.DataColumn columnCourse;
            
            private global::System.Data.DataColumn columnYearofStudy;
            
            private global::System.Data.DataColumn columnContactNo;
            
            private global::System.Data.DataColumn columnEmailID;
            
            private global::System.Data.DataColumn columnMedicalHistrory;
            
            private global::System.Data.DataColumn columnGuardianName;
            
            private global::System.Data.DataColumn columnGuardianRelationship;
            
            private global::System.Data.DataColumn columnGuardianAddress;
            
            private global::System.Data.DataColumn columnGuardiancontactno;
            
            private global::System.Data.DataColumn columnPolicenear;
            
            private global::System.Data.DataColumn columnFloorno;
            
            private global::System.Data.DataColumn columnRoom;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StuDetailsDataTable() {
                this.TableName = "StuDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal StuDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected StuDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RegnoColumn {
                get {
                    return this.columnRegno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FullnameColumn {
                get {
                    return this.columnFullname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SurnameColumn {
                get {
                    return this.columnSurname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DistrictColumn {
                get {
                    return this.columnDistrict;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GSDivisionColumn {
                get {
                    return this.columnGSDivision;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DSDivisionColumn {
                get {
                    return this.columnDSDivision;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SexColumn {
                get {
                    return this.columnSex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NICnoColumn {
                get {
                    return this.columnNICno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DateOfBirthColumn {
                get {
                    return this.columnDateOfBirth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FacultyColumn {
                get {
                    return this.columnFaculty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CourseColumn {
                get {
                    return this.columnCourse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn YearofStudyColumn {
                get {
                    return this.columnYearofStudy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ContactNoColumn {
                get {
                    return this.columnContactNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EmailIDColumn {
                get {
                    return this.columnEmailID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MedicalHistroryColumn {
                get {
                    return this.columnMedicalHistrory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GuardianNameColumn {
                get {
                    return this.columnGuardianName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GuardianRelationshipColumn {
                get {
                    return this.columnGuardianRelationship;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GuardianAddressColumn {
                get {
                    return this.columnGuardianAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GuardiancontactnoColumn {
                get {
                    return this.columnGuardiancontactno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PolicenearColumn {
                get {
                    return this.columnPolicenear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FloornoColumn {
                get {
                    return this.columnFloorno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RoomColumn {
                get {
                    return this.columnRoom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StuDetailsRow this[int index] {
                get {
                    return ((StuDetailsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StuDetailsRowChangeEventHandler StuDetailsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StuDetailsRowChangeEventHandler StuDetailsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StuDetailsRowChangeEventHandler StuDetailsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StuDetailsRowChangeEventHandler StuDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddStuDetailsRow(StuDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StuDetailsRow AddStuDetailsRow(
                        string Regno, 
                        string Fullname, 
                        string Surname, 
                        string Address, 
                        string District, 
                        string GSDivision, 
                        string DSDivision, 
                        string Sex, 
                        string NICno, 
                        string DateOfBirth, 
                        string Faculty, 
                        string Course, 
                        string YearofStudy, 
                        string ContactNo, 
                        string EmailID, 
                        string MedicalHistrory, 
                        string GuardianName, 
                        string GuardianRelationship, 
                        string GuardianAddress, 
                        string Guardiancontactno, 
                        string Policenear, 
                        string Floorno, 
                        int Room) {
                StuDetailsRow rowStuDetailsRow = ((StuDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Regno,
                        Fullname,
                        Surname,
                        Address,
                        District,
                        GSDivision,
                        DSDivision,
                        Sex,
                        NICno,
                        DateOfBirth,
                        Faculty,
                        Course,
                        YearofStudy,
                        ContactNo,
                        EmailID,
                        MedicalHistrory,
                        GuardianName,
                        GuardianRelationship,
                        GuardianAddress,
                        Guardiancontactno,
                        Policenear,
                        Floorno,
                        Room};
                rowStuDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStuDetailsRow);
                return rowStuDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StuDetailsRow FindByRegno(string Regno) {
                return ((StuDetailsRow)(this.Rows.Find(new object[] {
                            Regno})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                StuDetailsDataTable cln = ((StuDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StuDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnRegno = base.Columns["Regno"];
                this.columnFullname = base.Columns["Fullname"];
                this.columnSurname = base.Columns["Surname"];
                this.columnAddress = base.Columns["Address"];
                this.columnDistrict = base.Columns["District"];
                this.columnGSDivision = base.Columns["GSDivision"];
                this.columnDSDivision = base.Columns["DSDivision"];
                this.columnSex = base.Columns["Sex"];
                this.columnNICno = base.Columns["NICno"];
                this.columnDateOfBirth = base.Columns["DateOfBirth"];
                this.columnFaculty = base.Columns["Faculty"];
                this.columnCourse = base.Columns["Course"];
                this.columnYearofStudy = base.Columns["YearofStudy"];
                this.columnContactNo = base.Columns["ContactNo"];
                this.columnEmailID = base.Columns["EmailID"];
                this.columnMedicalHistrory = base.Columns["MedicalHistrory"];
                this.columnGuardianName = base.Columns["GuardianName"];
                this.columnGuardianRelationship = base.Columns["GuardianRelationship"];
                this.columnGuardianAddress = base.Columns["GuardianAddress"];
                this.columnGuardiancontactno = base.Columns["Guardiancontactno"];
                this.columnPolicenear = base.Columns["Policenear"];
                this.columnFloorno = base.Columns["Floorno"];
                this.columnRoom = base.Columns["Room"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnRegno = new global::System.Data.DataColumn("Regno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegno);
                this.columnFullname = new global::System.Data.DataColumn("Fullname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullname);
                this.columnSurname = new global::System.Data.DataColumn("Surname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSurname);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnDistrict = new global::System.Data.DataColumn("District", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrict);
                this.columnGSDivision = new global::System.Data.DataColumn("GSDivision", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGSDivision);
                this.columnDSDivision = new global::System.Data.DataColumn("DSDivision", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSDivision);
                this.columnSex = new global::System.Data.DataColumn("Sex", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSex);
                this.columnNICno = new global::System.Data.DataColumn("NICno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNICno);
                this.columnDateOfBirth = new global::System.Data.DataColumn("DateOfBirth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateOfBirth);
                this.columnFaculty = new global::System.Data.DataColumn("Faculty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFaculty);
                this.columnCourse = new global::System.Data.DataColumn("Course", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCourse);
                this.columnYearofStudy = new global::System.Data.DataColumn("YearofStudy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYearofStudy);
                this.columnContactNo = new global::System.Data.DataColumn("ContactNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactNo);
                this.columnEmailID = new global::System.Data.DataColumn("EmailID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmailID);
                this.columnMedicalHistrory = new global::System.Data.DataColumn("MedicalHistrory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMedicalHistrory);
                this.columnGuardianName = new global::System.Data.DataColumn("GuardianName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGuardianName);
                this.columnGuardianRelationship = new global::System.Data.DataColumn("GuardianRelationship", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGuardianRelationship);
                this.columnGuardianAddress = new global::System.Data.DataColumn("GuardianAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGuardianAddress);
                this.columnGuardiancontactno = new global::System.Data.DataColumn("Guardiancontactno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGuardiancontactno);
                this.columnPolicenear = new global::System.Data.DataColumn("Policenear", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPolicenear);
                this.columnFloorno = new global::System.Data.DataColumn("Floorno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFloorno);
                this.columnRoom = new global::System.Data.DataColumn("Room", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoom);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRegno}, true));
                this.columnRegno.AllowDBNull = false;
                this.columnRegno.Unique = true;
                this.columnRegno.MaxLength = 50;
                this.columnFullname.AllowDBNull = false;
                this.columnFullname.MaxLength = 50;
                this.columnSurname.AllowDBNull = false;
                this.columnSurname.MaxLength = 50;
                this.columnAddress.AllowDBNull = false;
                this.columnAddress.MaxLength = 50;
                this.columnDistrict.AllowDBNull = false;
                this.columnDistrict.MaxLength = 50;
                this.columnGSDivision.AllowDBNull = false;
                this.columnGSDivision.MaxLength = 50;
                this.columnDSDivision.AllowDBNull = false;
                this.columnDSDivision.MaxLength = 50;
                this.columnSex.AllowDBNull = false;
                this.columnSex.MaxLength = 50;
                this.columnNICno.AllowDBNull = false;
                this.columnNICno.MaxLength = 50;
                this.columnDateOfBirth.AllowDBNull = false;
                this.columnDateOfBirth.MaxLength = 50;
                this.columnFaculty.AllowDBNull = false;
                this.columnFaculty.MaxLength = 50;
                this.columnCourse.AllowDBNull = false;
                this.columnCourse.MaxLength = 50;
                this.columnYearofStudy.AllowDBNull = false;
                this.columnYearofStudy.MaxLength = 50;
                this.columnContactNo.AllowDBNull = false;
                this.columnContactNo.MaxLength = 50;
                this.columnEmailID.AllowDBNull = false;
                this.columnEmailID.MaxLength = 50;
                this.columnMedicalHistrory.AllowDBNull = false;
                this.columnMedicalHistrory.MaxLength = 50;
                this.columnGuardianName.AllowDBNull = false;
                this.columnGuardianName.MaxLength = 50;
                this.columnGuardianRelationship.AllowDBNull = false;
                this.columnGuardianRelationship.MaxLength = 50;
                this.columnGuardianAddress.AllowDBNull = false;
                this.columnGuardianAddress.MaxLength = 50;
                this.columnGuardiancontactno.AllowDBNull = false;
                this.columnGuardiancontactno.MaxLength = 50;
                this.columnPolicenear.AllowDBNull = false;
                this.columnPolicenear.MaxLength = 50;
                this.columnFloorno.AllowDBNull = false;
                this.columnFloorno.MaxLength = 50;
                this.columnRoom.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StuDetailsRow NewStuDetailsRow() {
                return ((StuDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StuDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(StuDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StuDetailsRowChanged != null)) {
                    this.StuDetailsRowChanged(this, new StuDetailsRowChangeEvent(((StuDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StuDetailsRowChanging != null)) {
                    this.StuDetailsRowChanging(this, new StuDetailsRowChangeEvent(((StuDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StuDetailsRowDeleted != null)) {
                    this.StuDetailsRowDeleted(this, new StuDetailsRowChangeEvent(((StuDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StuDetailsRowDeleting != null)) {
                    this.StuDetailsRowDeleting(this, new StuDetailsRowChangeEvent(((StuDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveStuDetailsRow(StuDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HostelDBDataSet2 ds = new HostelDBDataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StuDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UserRegisterDataTable : global::System.Data.TypedTableBase<UserRegisterRow> {
            
            private global::System.Data.DataColumn columnUserId;
            
            private global::System.Data.DataColumn columnInstitude_name;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnContact;
            
            private global::System.Data.DataColumn columnCreater_name;
            
            private global::System.Data.DataColumn columnUser_name;
            
            private global::System.Data.DataColumn columnPassword;
            
            private global::System.Data.DataColumn columnConPassword;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UserRegisterDataTable() {
                this.TableName = "UserRegister";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal UserRegisterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected UserRegisterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UserIdColumn {
                get {
                    return this.columnUserId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Institude_nameColumn {
                get {
                    return this.columnInstitude_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ContactColumn {
                get {
                    return this.columnContact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Creater_nameColumn {
                get {
                    return this.columnCreater_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn User_nameColumn {
                get {
                    return this.columnUser_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PasswordColumn {
                get {
                    return this.columnPassword;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ConPasswordColumn {
                get {
                    return this.columnConPassword;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UserRegisterRow this[int index] {
                get {
                    return ((UserRegisterRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event UserRegisterRowChangeEventHandler UserRegisterRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event UserRegisterRowChangeEventHandler UserRegisterRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event UserRegisterRowChangeEventHandler UserRegisterRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event UserRegisterRowChangeEventHandler UserRegisterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddUserRegisterRow(UserRegisterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UserRegisterRow AddUserRegisterRow(string Institude_name, string Email, string Contact, string Creater_name, string User_name, string Password, string ConPassword) {
                UserRegisterRow rowUserRegisterRow = ((UserRegisterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Institude_name,
                        Email,
                        Contact,
                        Creater_name,
                        User_name,
                        Password,
                        ConPassword};
                rowUserRegisterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUserRegisterRow);
                return rowUserRegisterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UserRegisterRow FindByUserId(int UserId) {
                return ((UserRegisterRow)(this.Rows.Find(new object[] {
                            UserId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                UserRegisterDataTable cln = ((UserRegisterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UserRegisterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnUserId = base.Columns["UserId"];
                this.columnInstitude_name = base.Columns["Institude_name"];
                this.columnEmail = base.Columns["Email"];
                this.columnContact = base.Columns["Contact"];
                this.columnCreater_name = base.Columns["Creater_name"];
                this.columnUser_name = base.Columns["User_name"];
                this.columnPassword = base.Columns["Password"];
                this.columnConPassword = base.Columns["ConPassword"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnUserId = new global::System.Data.DataColumn("UserId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserId);
                this.columnInstitude_name = new global::System.Data.DataColumn("Institude_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstitude_name);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnContact = new global::System.Data.DataColumn("Contact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContact);
                this.columnCreater_name = new global::System.Data.DataColumn("Creater_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreater_name);
                this.columnUser_name = new global::System.Data.DataColumn("User_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUser_name);
                this.columnPassword = new global::System.Data.DataColumn("Password", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPassword);
                this.columnConPassword = new global::System.Data.DataColumn("ConPassword", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConPassword);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnUserId}, true));
                this.columnUserId.AutoIncrement = true;
                this.columnUserId.AutoIncrementSeed = -1;
                this.columnUserId.AutoIncrementStep = -1;
                this.columnUserId.AllowDBNull = false;
                this.columnUserId.ReadOnly = true;
                this.columnUserId.Unique = true;
                this.columnInstitude_name.AllowDBNull = false;
                this.columnInstitude_name.MaxLength = 50;
                this.columnEmail.AllowDBNull = false;
                this.columnEmail.MaxLength = 50;
                this.columnContact.AllowDBNull = false;
                this.columnContact.MaxLength = 50;
                this.columnCreater_name.AllowDBNull = false;
                this.columnCreater_name.MaxLength = 50;
                this.columnUser_name.AllowDBNull = false;
                this.columnUser_name.MaxLength = 50;
                this.columnPassword.AllowDBNull = false;
                this.columnPassword.MaxLength = 50;
                this.columnConPassword.AllowDBNull = false;
                this.columnConPassword.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UserRegisterRow NewUserRegisterRow() {
                return ((UserRegisterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UserRegisterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(UserRegisterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UserRegisterRowChanged != null)) {
                    this.UserRegisterRowChanged(this, new UserRegisterRowChangeEvent(((UserRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UserRegisterRowChanging != null)) {
                    this.UserRegisterRowChanging(this, new UserRegisterRowChangeEvent(((UserRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UserRegisterRowDeleted != null)) {
                    this.UserRegisterRowDeleted(this, new UserRegisterRowChangeEvent(((UserRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UserRegisterRowDeleting != null)) {
                    this.UserRegisterRowDeleting(this, new UserRegisterRowChangeEvent(((UserRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveUserRegisterRow(UserRegisterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HostelDBDataSet2 ds = new HostelDBDataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UserRegisterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AssertRow : global::System.Data.DataRow {
            
            private AssertDataTable tableAssert;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal AssertRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAssert = ((AssertDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RoomId {
                get {
                    return ((string)(this[this.tableAssert.RoomIdColumn]));
                }
                set {
                    this[this.tableAssert.RoomIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Floor {
                get {
                    return ((string)(this[this.tableAssert.FloorColumn]));
                }
                set {
                    this[this.tableAssert.FloorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Room_no {
                get {
                    return ((int)(this[this.tableAssert.Room_noColumn]));
                }
                set {
                    this[this.tableAssert.Room_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Frontkey {
                get {
                    return ((int)(this[this.tableAssert.FrontkeyColumn]));
                }
                set {
                    this[this.tableAssert.FrontkeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Backkey {
                get {
                    return ((int)(this[this.tableAssert.BackkeyColumn]));
                }
                set {
                    this[this.tableAssert.BackkeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Beds {
                get {
                    return ((int)(this[this.tableAssert.BedsColumn]));
                }
                set {
                    this[this.tableAssert.BedsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Mattress {
                get {
                    return ((int)(this[this.tableAssert.MattressColumn]));
                }
                set {
                    this[this.tableAssert.MattressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Tables {
                get {
                    return ((int)(this[this.tableAssert.TablesColumn]));
                }
                set {
                    this[this.tableAssert.TablesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Chairs {
                get {
                    return ((int)(this[this.tableAssert.ChairsColumn]));
                }
                set {
                    this[this.tableAssert.ChairsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Fans {
                get {
                    return ((int)(this[this.tableAssert.FansColumn]));
                }
                set {
                    this[this.tableAssert.FansColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AssetsRow : global::System.Data.DataRow {
            
            private AssetsDataTable tableAssets;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal AssetsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAssets = ((AssetsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RoomId {
                get {
                    return ((string)(this[this.tableAssets.RoomIdColumn]));
                }
                set {
                    this[this.tableAssets.RoomIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Floor {
                get {
                    return ((string)(this[this.tableAssets.FloorColumn]));
                }
                set {
                    this[this.tableAssets.FloorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Room_no {
                get {
                    return ((int)(this[this.tableAssets.Room_noColumn]));
                }
                set {
                    this[this.tableAssets.Room_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Frontkey {
                get {
                    return ((int)(this[this.tableAssets.FrontkeyColumn]));
                }
                set {
                    this[this.tableAssets.FrontkeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Backkey {
                get {
                    return ((int)(this[this.tableAssets.BackkeyColumn]));
                }
                set {
                    this[this.tableAssets.BackkeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Beds {
                get {
                    return ((int)(this[this.tableAssets.BedsColumn]));
                }
                set {
                    this[this.tableAssets.BedsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Mattress {
                get {
                    return ((int)(this[this.tableAssets.MattressColumn]));
                }
                set {
                    this[this.tableAssets.MattressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Tables {
                get {
                    return ((int)(this[this.tableAssets.TablesColumn]));
                }
                set {
                    this[this.tableAssets.TablesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Chairs {
                get {
                    return ((int)(this[this.tableAssets.ChairsColumn]));
                }
                set {
                    this[this.tableAssets.ChairsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Fans {
                get {
                    return ((int)(this[this.tableAssets.FansColumn]));
                }
                set {
                    this[this.tableAssets.FansColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class StaffDetailsRow : global::System.Data.DataRow {
            
            private StaffDetailsDataTable tableStaffDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal StaffDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStaffDetails = ((StaffDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EmpId {
                get {
                    return ((string)(this[this.tableStaffDetails.EmpIdColumn]));
                }
                set {
                    this[this.tableStaffDetails.EmpIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Fullname {
                get {
                    return ((string)(this[this.tableStaffDetails.FullnameColumn]));
                }
                set {
                    this[this.tableStaffDetails.FullnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Address {
                get {
                    return ((string)(this[this.tableStaffDetails.AddressColumn]));
                }
                set {
                    this[this.tableStaffDetails.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Category {
                get {
                    return ((string)(this[this.tableStaffDetails.CategoryColumn]));
                }
                set {
                    this[this.tableStaffDetails.CategoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Joined {
                get {
                    return ((string)(this[this.tableStaffDetails.JoinedColumn]));
                }
                set {
                    this[this.tableStaffDetails.JoinedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Sex {
                get {
                    return ((string)(this[this.tableStaffDetails.SexColumn]));
                }
                set {
                    this[this.tableStaffDetails.SexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NIC {
                get {
                    return ((string)(this[this.tableStaffDetails.NICColumn]));
                }
                set {
                    this[this.tableStaffDetails.NICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DOB {
                get {
                    return ((string)(this[this.tableStaffDetails.DOBColumn]));
                }
                set {
                    this[this.tableStaffDetails.DOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Contact {
                get {
                    return ((string)(this[this.tableStaffDetails.ContactColumn]));
                }
                set {
                    this[this.tableStaffDetails.ContactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Email {
                get {
                    return ((string)(this[this.tableStaffDetails.EmailColumn]));
                }
                set {
                    this[this.tableStaffDetails.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EmName {
                get {
                    return ((string)(this[this.tableStaffDetails.EmNameColumn]));
                }
                set {
                    this[this.tableStaffDetails.EmNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EmAddress {
                get {
                    return ((string)(this[this.tableStaffDetails.EmAddressColumn]));
                }
                set {
                    this[this.tableStaffDetails.EmAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EmPhone {
                get {
                    return ((string)(this[this.tableStaffDetails.EmPhoneColumn]));
                }
                set {
                    this[this.tableStaffDetails.EmPhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EmRel {
                get {
                    return ((string)(this[this.tableStaffDetails.EmRelColumn]));
                }
                set {
                    this[this.tableStaffDetails.EmRelColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class StudentRow : global::System.Data.DataRow {
            
            private StudentDataTable tableStudent;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal StudentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStudent = ((StudentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tableStudent.IdColumn]));
                }
                set {
                    this[this.tableStudent.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Regno {
                get {
                    return ((string)(this[this.tableStudent.RegnoColumn]));
                }
                set {
                    this[this.tableStudent.RegnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Fullname {
                get {
                    return ((string)(this[this.tableStudent.FullnameColumn]));
                }
                set {
                    this[this.tableStudent.FullnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Surname {
                get {
                    return ((string)(this[this.tableStudent.SurnameColumn]));
                }
                set {
                    this[this.tableStudent.SurnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Address {
                get {
                    return ((string)(this[this.tableStudent.AddressColumn]));
                }
                set {
                    this[this.tableStudent.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string District {
                get {
                    return ((string)(this[this.tableStudent.DistrictColumn]));
                }
                set {
                    this[this.tableStudent.DistrictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string GSdivision {
                get {
                    return ((string)(this[this.tableStudent.GSdivisionColumn]));
                }
                set {
                    this[this.tableStudent.GSdivisionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DSdivision {
                get {
                    return ((string)(this[this.tableStudent.DSdivisionColumn]));
                }
                set {
                    this[this.tableStudent.DSdivisionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Sex {
                get {
                    return ((string)(this[this.tableStudent.SexColumn]));
                }
                set {
                    this[this.tableStudent.SexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NICno {
                get {
                    return ((string)(this[this.tableStudent.NICnoColumn]));
                }
                set {
                    this[this.tableStudent.NICnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DOB {
                get {
                    return ((string)(this[this.tableStudent.DOBColumn]));
                }
                set {
                    this[this.tableStudent.DOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Faculty {
                get {
                    return ((string)(this[this.tableStudent.FacultyColumn]));
                }
                set {
                    this[this.tableStudent.FacultyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Course {
                get {
                    return ((string)(this[this.tableStudent.CourseColumn]));
                }
                set {
                    this[this.tableStudent.CourseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Yearofstudy {
                get {
                    return ((string)(this[this.tableStudent.YearofstudyColumn]));
                }
                set {
                    this[this.tableStudent.YearofstudyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Contact {
                get {
                    return ((string)(this[this.tableStudent.ContactColumn]));
                }
                set {
                    this[this.tableStudent.ContactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Email {
                get {
                    return ((string)(this[this.tableStudent.EmailColumn]));
                }
                set {
                    this[this.tableStudent.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Medicalhistory {
                get {
                    return ((string)(this[this.tableStudent.MedicalhistoryColumn]));
                }
                set {
                    this[this.tableStudent.MedicalhistoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Guardianname {
                get {
                    return ((string)(this[this.tableStudent.GuardiannameColumn]));
                }
                set {
                    this[this.tableStudent.GuardiannameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Guardianrelationship {
                get {
                    return ((string)(this[this.tableStudent.GuardianrelationshipColumn]));
                }
                set {
                    this[this.tableStudent.GuardianrelationshipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string GuardianAddress {
                get {
                    return ((string)(this[this.tableStudent.GuardianAddressColumn]));
                }
                set {
                    this[this.tableStudent.GuardianAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Guardiancontact {
                get {
                    return ((string)(this[this.tableStudent.GuardiancontactColumn]));
                }
                set {
                    this[this.tableStudent.GuardiancontactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Nearbypolice {
                get {
                    return ((string)(this[this.tableStudent.NearbypoliceColumn]));
                }
                set {
                    this[this.tableStudent.NearbypoliceColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class StudentDetailRow : global::System.Data.DataRow {
            
            private StudentDetailDataTable tableStudentDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal StudentDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStudentDetail = ((StudentDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Student_Reg_no {
                get {
                    return ((string)(this[this.tableStudentDetail.Student_Reg_noColumn]));
                }
                set {
                    this[this.tableStudentDetail.Student_Reg_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Fullname {
                get {
                    return ((string)(this[this.tableStudentDetail.FullnameColumn]));
                }
                set {
                    this[this.tableStudentDetail.FullnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Surname {
                get {
                    return ((string)(this[this.tableStudentDetail.SurnameColumn]));
                }
                set {
                    this[this.tableStudentDetail.SurnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Address {
                get {
                    return ((string)(this[this.tableStudentDetail.AddressColumn]));
                }
                set {
                    this[this.tableStudentDetail.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string District {
                get {
                    return ((string)(this[this.tableStudentDetail.DistrictColumn]));
                }
                set {
                    this[this.tableStudentDetail.DistrictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string GS_Division {
                get {
                    return ((string)(this[this.tableStudentDetail.GS_DivisionColumn]));
                }
                set {
                    this[this.tableStudentDetail.GS_DivisionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DS_Division {
                get {
                    return ((string)(this[this.tableStudentDetail.DS_DivisionColumn]));
                }
                set {
                    this[this.tableStudentDetail.DS_DivisionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Sex {
                get {
                    return ((string)(this[this.tableStudentDetail.SexColumn]));
                }
                set {
                    this[this.tableStudentDetail.SexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NIC_no {
                get {
                    return ((string)(this[this.tableStudentDetail.NIC_noColumn]));
                }
                set {
                    this[this.tableStudentDetail.NIC_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Date_Of_Birth {
                get {
                    return ((string)(this[this.tableStudentDetail.Date_Of_BirthColumn]));
                }
                set {
                    this[this.tableStudentDetail.Date_Of_BirthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Faculty {
                get {
                    return ((string)(this[this.tableStudentDetail.FacultyColumn]));
                }
                set {
                    this[this.tableStudentDetail.FacultyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Course {
                get {
                    return ((string)(this[this.tableStudentDetail.CourseColumn]));
                }
                set {
                    this[this.tableStudentDetail.CourseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string YearofStudy {
                get {
                    return ((string)(this[this.tableStudentDetail.YearofStudyColumn]));
                }
                set {
                    this[this.tableStudentDetail.YearofStudyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Contact_No {
                get {
                    return ((string)(this[this.tableStudentDetail.Contact_NoColumn]));
                }
                set {
                    this[this.tableStudentDetail.Contact_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string _E_mail_ID {
                get {
                    return ((string)(this[this.tableStudentDetail._E_mail_IDColumn]));
                }
                set {
                    this[this.tableStudentDetail._E_mail_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MedicalHistrory {
                get {
                    return ((string)(this[this.tableStudentDetail.MedicalHistroryColumn]));
                }
                set {
                    this[this.tableStudentDetail.MedicalHistroryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Guardian_Name {
                get {
                    return ((string)(this[this.tableStudentDetail.Guardian_NameColumn]));
                }
                set {
                    this[this.tableStudentDetail.Guardian_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Guardian_Relationship {
                get {
                    return ((string)(this[this.tableStudentDetail.Guardian_RelationshipColumn]));
                }
                set {
                    this[this.tableStudentDetail.Guardian_RelationshipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Guardian_Address {
                get {
                    return ((string)(this[this.tableStudentDetail.Guardian_AddressColumn]));
                }
                set {
                    this[this.tableStudentDetail.Guardian_AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Guardian_contactno {
                get {
                    return ((string)(this[this.tableStudentDetail.Guardian_contactnoColumn]));
                }
                set {
                    this[this.tableStudentDetail.Guardian_contactnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Police_near {
                get {
                    return ((string)(this[this.tableStudentDetail.Police_nearColumn]));
                }
                set {
                    this[this.tableStudentDetail.Police_nearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Floor_no {
                get {
                    return ((string)(this[this.tableStudentDetail.Floor_noColumn]));
                }
                set {
                    this[this.tableStudentDetail.Floor_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Room {
                get {
                    return ((int)(this[this.tableStudentDetail.RoomColumn]));
                }
                set {
                    this[this.tableStudentDetail.RoomColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class StuDetailsRow : global::System.Data.DataRow {
            
            private StuDetailsDataTable tableStuDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal StuDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStuDetails = ((StuDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Regno {
                get {
                    return ((string)(this[this.tableStuDetails.RegnoColumn]));
                }
                set {
                    this[this.tableStuDetails.RegnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Fullname {
                get {
                    return ((string)(this[this.tableStuDetails.FullnameColumn]));
                }
                set {
                    this[this.tableStuDetails.FullnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Surname {
                get {
                    return ((string)(this[this.tableStuDetails.SurnameColumn]));
                }
                set {
                    this[this.tableStuDetails.SurnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Address {
                get {
                    return ((string)(this[this.tableStuDetails.AddressColumn]));
                }
                set {
                    this[this.tableStuDetails.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string District {
                get {
                    return ((string)(this[this.tableStuDetails.DistrictColumn]));
                }
                set {
                    this[this.tableStuDetails.DistrictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string GSDivision {
                get {
                    return ((string)(this[this.tableStuDetails.GSDivisionColumn]));
                }
                set {
                    this[this.tableStuDetails.GSDivisionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DSDivision {
                get {
                    return ((string)(this[this.tableStuDetails.DSDivisionColumn]));
                }
                set {
                    this[this.tableStuDetails.DSDivisionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Sex {
                get {
                    return ((string)(this[this.tableStuDetails.SexColumn]));
                }
                set {
                    this[this.tableStuDetails.SexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NICno {
                get {
                    return ((string)(this[this.tableStuDetails.NICnoColumn]));
                }
                set {
                    this[this.tableStuDetails.NICnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DateOfBirth {
                get {
                    return ((string)(this[this.tableStuDetails.DateOfBirthColumn]));
                }
                set {
                    this[this.tableStuDetails.DateOfBirthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Faculty {
                get {
                    return ((string)(this[this.tableStuDetails.FacultyColumn]));
                }
                set {
                    this[this.tableStuDetails.FacultyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Course {
                get {
                    return ((string)(this[this.tableStuDetails.CourseColumn]));
                }
                set {
                    this[this.tableStuDetails.CourseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string YearofStudy {
                get {
                    return ((string)(this[this.tableStuDetails.YearofStudyColumn]));
                }
                set {
                    this[this.tableStuDetails.YearofStudyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ContactNo {
                get {
                    return ((string)(this[this.tableStuDetails.ContactNoColumn]));
                }
                set {
                    this[this.tableStuDetails.ContactNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EmailID {
                get {
                    return ((string)(this[this.tableStuDetails.EmailIDColumn]));
                }
                set {
                    this[this.tableStuDetails.EmailIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MedicalHistrory {
                get {
                    return ((string)(this[this.tableStuDetails.MedicalHistroryColumn]));
                }
                set {
                    this[this.tableStuDetails.MedicalHistroryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string GuardianName {
                get {
                    return ((string)(this[this.tableStuDetails.GuardianNameColumn]));
                }
                set {
                    this[this.tableStuDetails.GuardianNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string GuardianRelationship {
                get {
                    return ((string)(this[this.tableStuDetails.GuardianRelationshipColumn]));
                }
                set {
                    this[this.tableStuDetails.GuardianRelationshipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string GuardianAddress {
                get {
                    return ((string)(this[this.tableStuDetails.GuardianAddressColumn]));
                }
                set {
                    this[this.tableStuDetails.GuardianAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Guardiancontactno {
                get {
                    return ((string)(this[this.tableStuDetails.GuardiancontactnoColumn]));
                }
                set {
                    this[this.tableStuDetails.GuardiancontactnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Policenear {
                get {
                    return ((string)(this[this.tableStuDetails.PolicenearColumn]));
                }
                set {
                    this[this.tableStuDetails.PolicenearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Floorno {
                get {
                    return ((string)(this[this.tableStuDetails.FloornoColumn]));
                }
                set {
                    this[this.tableStuDetails.FloornoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Room {
                get {
                    return ((int)(this[this.tableStuDetails.RoomColumn]));
                }
                set {
                    this[this.tableStuDetails.RoomColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class UserRegisterRow : global::System.Data.DataRow {
            
            private UserRegisterDataTable tableUserRegister;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal UserRegisterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUserRegister = ((UserRegisterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int UserId {
                get {
                    return ((int)(this[this.tableUserRegister.UserIdColumn]));
                }
                set {
                    this[this.tableUserRegister.UserIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Institude_name {
                get {
                    return ((string)(this[this.tableUserRegister.Institude_nameColumn]));
                }
                set {
                    this[this.tableUserRegister.Institude_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Email {
                get {
                    return ((string)(this[this.tableUserRegister.EmailColumn]));
                }
                set {
                    this[this.tableUserRegister.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Contact {
                get {
                    return ((string)(this[this.tableUserRegister.ContactColumn]));
                }
                set {
                    this[this.tableUserRegister.ContactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Creater_name {
                get {
                    return ((string)(this[this.tableUserRegister.Creater_nameColumn]));
                }
                set {
                    this[this.tableUserRegister.Creater_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string User_name {
                get {
                    return ((string)(this[this.tableUserRegister.User_nameColumn]));
                }
                set {
                    this[this.tableUserRegister.User_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Password {
                get {
                    return ((string)(this[this.tableUserRegister.PasswordColumn]));
                }
                set {
                    this[this.tableUserRegister.PasswordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ConPassword {
                get {
                    return ((string)(this[this.tableUserRegister.ConPasswordColumn]));
                }
                set {
                    this[this.tableUserRegister.ConPasswordColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class AssertRowChangeEvent : global::System.EventArgs {
            
            private AssertRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public AssertRowChangeEvent(AssertRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public AssertRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class AssetsRowChangeEvent : global::System.EventArgs {
            
            private AssetsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public AssetsRowChangeEvent(AssetsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public AssetsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class StaffDetailsRowChangeEvent : global::System.EventArgs {
            
            private StaffDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StaffDetailsRowChangeEvent(StaffDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StaffDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class StudentRowChangeEvent : global::System.EventArgs {
            
            private StudentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentRowChangeEvent(StudentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class StudentDetailRowChangeEvent : global::System.EventArgs {
            
            private StudentDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentDetailRowChangeEvent(StudentDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StudentDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class StuDetailsRowChangeEvent : global::System.EventArgs {
            
            private StuDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StuDetailsRowChangeEvent(StuDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StuDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class UserRegisterRowChangeEvent : global::System.EventArgs {
            
            private UserRegisterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UserRegisterRowChangeEvent(UserRegisterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UserRegisterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace hostelloginpage.HostelDBDataSet2TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class AssertTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public AssertTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Assert";
            tableMapping.ColumnMappings.Add("RoomId", "RoomId");
            tableMapping.ColumnMappings.Add("Floor", "Floor");
            tableMapping.ColumnMappings.Add("Room_no", "Room_no");
            tableMapping.ColumnMappings.Add("Frontkey", "Frontkey");
            tableMapping.ColumnMappings.Add("Backkey", "Backkey");
            tableMapping.ColumnMappings.Add("Beds", "Beds");
            tableMapping.ColumnMappings.Add("Mattress", "Mattress");
            tableMapping.ColumnMappings.Add("Tables", "Tables");
            tableMapping.ColumnMappings.Add("Chairs", "Chairs");
            tableMapping.ColumnMappings.Add("Fans", "Fans");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Assert] WHERE (([RoomId] = @Original_RoomId) AND ([Floor] = @Original_Floor) AND ([Room_no] = @Original_Room_no) AND ([Frontkey] = @Original_Frontkey) AND ([Backkey] = @Original_Backkey) AND ([Beds] = @Original_Beds) AND ([Mattress] = @Original_Mattress) AND ([Tables] = @Original_Tables) AND ([Chairs] = @Original_Chairs) AND ([Fans] = @Original_Fans))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RoomId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RoomId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Floor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Floor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Room_no", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room_no", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Frontkey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Frontkey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Backkey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Backkey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Beds", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Beds", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mattress", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mattress", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tables", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tables", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Chairs", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Chairs", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fans", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fans", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Assert] ([RoomId], [Floor], [Room_no], [Frontkey], [Backkey], [Beds], [Mattress], [Tables], [Chairs], [Fans]) VALUES (@RoomId, @Floor, @Room_no, @Frontkey, @Backkey, @Beds, @Mattress, @Tables, @Chairs, @Fans);
SELECT RoomId, Floor, Room_no, Frontkey, Backkey, Beds, Mattress, Tables, Chairs, Fans FROM Assert WHERE (RoomId = @RoomId)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RoomId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RoomId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Floor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Floor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Room_no", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room_no", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Frontkey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Frontkey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Backkey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Backkey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Beds", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Beds", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mattress", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mattress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tables", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tables", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Chairs", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Chairs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fans", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fans", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Assert] SET [RoomId] = @RoomId, [Floor] = @Floor, [Room_no] = @Room_no, [Frontkey] = @Frontkey, [Backkey] = @Backkey, [Beds] = @Beds, [Mattress] = @Mattress, [Tables] = @Tables, [Chairs] = @Chairs, [Fans] = @Fans WHERE (([RoomId] = @Original_RoomId) AND ([Floor] = @Original_Floor) AND ([Room_no] = @Original_Room_no) AND ([Frontkey] = @Original_Frontkey) AND ([Backkey] = @Original_Backkey) AND ([Beds] = @Original_Beds) AND ([Mattress] = @Original_Mattress) AND ([Tables] = @Original_Tables) AND ([Chairs] = @Original_Chairs) AND ([Fans] = @Original_Fans));
SELECT RoomId, Floor, Room_no, Frontkey, Backkey, Beds, Mattress, Tables, Chairs, Fans FROM Assert WHERE (RoomId = @RoomId)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RoomId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RoomId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Floor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Floor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Room_no", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room_no", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Frontkey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Frontkey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Backkey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Backkey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Beds", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Beds", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mattress", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mattress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tables", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tables", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Chairs", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Chairs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fans", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fans", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RoomId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RoomId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Floor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Floor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Room_no", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room_no", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Frontkey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Frontkey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Backkey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Backkey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Beds", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Beds", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mattress", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mattress", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tables", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tables", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Chairs", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Chairs", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fans", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fans", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::hostelloginpage.Properties.Settings.Default.HostelDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT RoomId, Floor, Room_no, Frontkey, Backkey, Beds, Mattress, Tables, Chairs," +
                " Fans FROM dbo.Assert";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(HostelDBDataSet2.AssertDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual HostelDBDataSet2.AssertDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            HostelDBDataSet2.AssertDataTable dataTable = new HostelDBDataSet2.AssertDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(HostelDBDataSet2.AssertDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(HostelDBDataSet2 dataSet) {
            return this.Adapter.Update(dataSet, "Assert");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_RoomId, string Original_Floor, int Original_Room_no, int Original_Frontkey, int Original_Backkey, int Original_Beds, int Original_Mattress, int Original_Tables, int Original_Chairs, int Original_Fans) {
            if ((Original_RoomId == null)) {
                throw new global::System.ArgumentNullException("Original_RoomId");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_RoomId));
            }
            if ((Original_Floor == null)) {
                throw new global::System.ArgumentNullException("Original_Floor");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Floor));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_Room_no));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_Frontkey));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_Backkey));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_Beds));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_Mattress));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_Tables));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_Chairs));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_Fans));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string RoomId, string Floor, int Room_no, int Frontkey, int Backkey, int Beds, int Mattress, int Tables, int Chairs, int Fans) {
            if ((RoomId == null)) {
                throw new global::System.ArgumentNullException("RoomId");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(RoomId));
            }
            if ((Floor == null)) {
                throw new global::System.ArgumentNullException("Floor");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Floor));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Room_no));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(Frontkey));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(Backkey));
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(Beds));
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(Mattress));
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(Tables));
            this.Adapter.InsertCommand.Parameters[8].Value = ((int)(Chairs));
            this.Adapter.InsertCommand.Parameters[9].Value = ((int)(Fans));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string RoomId, 
                    string Floor, 
                    int Room_no, 
                    int Frontkey, 
                    int Backkey, 
                    int Beds, 
                    int Mattress, 
                    int Tables, 
                    int Chairs, 
                    int Fans, 
                    string Original_RoomId, 
                    string Original_Floor, 
                    int Original_Room_no, 
                    int Original_Frontkey, 
                    int Original_Backkey, 
                    int Original_Beds, 
                    int Original_Mattress, 
                    int Original_Tables, 
                    int Original_Chairs, 
                    int Original_Fans) {
            if ((RoomId == null)) {
                throw new global::System.ArgumentNullException("RoomId");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(RoomId));
            }
            if ((Floor == null)) {
                throw new global::System.ArgumentNullException("Floor");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Floor));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Room_no));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Frontkey));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Backkey));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Beds));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Mattress));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Tables));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Chairs));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Fans));
            if ((Original_RoomId == null)) {
                throw new global::System.ArgumentNullException("Original_RoomId");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_RoomId));
            }
            if ((Original_Floor == null)) {
                throw new global::System.ArgumentNullException("Original_Floor");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Floor));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_Room_no));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_Frontkey));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_Backkey));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_Beds));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_Mattress));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_Tables));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_Chairs));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Original_Fans));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Floor, 
                    int Room_no, 
                    int Frontkey, 
                    int Backkey, 
                    int Beds, 
                    int Mattress, 
                    int Tables, 
                    int Chairs, 
                    int Fans, 
                    string Original_RoomId, 
                    string Original_Floor, 
                    int Original_Room_no, 
                    int Original_Frontkey, 
                    int Original_Backkey, 
                    int Original_Beds, 
                    int Original_Mattress, 
                    int Original_Tables, 
                    int Original_Chairs, 
                    int Original_Fans) {
            return this.Update(Original_RoomId, Floor, Room_no, Frontkey, Backkey, Beds, Mattress, Tables, Chairs, Fans, Original_RoomId, Original_Floor, Original_Room_no, Original_Frontkey, Original_Backkey, Original_Beds, Original_Mattress, Original_Tables, Original_Chairs, Original_Fans);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class AssetsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public AssetsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Assets";
            tableMapping.ColumnMappings.Add("RoomId", "RoomId");
            tableMapping.ColumnMappings.Add("Floor", "Floor");
            tableMapping.ColumnMappings.Add("Room_no", "Room_no");
            tableMapping.ColumnMappings.Add("Frontkey", "Frontkey");
            tableMapping.ColumnMappings.Add("Backkey", "Backkey");
            tableMapping.ColumnMappings.Add("Beds", "Beds");
            tableMapping.ColumnMappings.Add("Mattress", "Mattress");
            tableMapping.ColumnMappings.Add("Tables", "Tables");
            tableMapping.ColumnMappings.Add("Chairs", "Chairs");
            tableMapping.ColumnMappings.Add("Fans", "Fans");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Assets] WHERE (([RoomId] = @Original_RoomId) AND ([Floor] = @Original_Floor) AND ([Room_no] = @Original_Room_no) AND ([Frontkey] = @Original_Frontkey) AND ([Backkey] = @Original_Backkey) AND ([Beds] = @Original_Beds) AND ([Mattress] = @Original_Mattress) AND ([Tables] = @Original_Tables) AND ([Chairs] = @Original_Chairs) AND ([Fans] = @Original_Fans))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RoomId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RoomId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Floor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Floor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Room_no", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room_no", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Frontkey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Frontkey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Backkey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Backkey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Beds", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Beds", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mattress", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mattress", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tables", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tables", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Chairs", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Chairs", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fans", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fans", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Assets] ([RoomId], [Floor], [Room_no], [Frontkey], [Backkey], [Beds], [Mattress], [Tables], [Chairs], [Fans]) VALUES (@RoomId, @Floor, @Room_no, @Frontkey, @Backkey, @Beds, @Mattress, @Tables, @Chairs, @Fans);
SELECT RoomId, Floor, Room_no, Frontkey, Backkey, Beds, Mattress, Tables, Chairs, Fans FROM Assets WHERE (RoomId = @RoomId)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RoomId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RoomId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Floor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Floor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Room_no", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room_no", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Frontkey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Frontkey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Backkey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Backkey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Beds", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Beds", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mattress", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mattress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tables", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tables", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Chairs", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Chairs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fans", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fans", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Assets] SET [RoomId] = @RoomId, [Floor] = @Floor, [Room_no] = @Room_no, [Frontkey] = @Frontkey, [Backkey] = @Backkey, [Beds] = @Beds, [Mattress] = @Mattress, [Tables] = @Tables, [Chairs] = @Chairs, [Fans] = @Fans WHERE (([RoomId] = @Original_RoomId) AND ([Floor] = @Original_Floor) AND ([Room_no] = @Original_Room_no) AND ([Frontkey] = @Original_Frontkey) AND ([Backkey] = @Original_Backkey) AND ([Beds] = @Original_Beds) AND ([Mattress] = @Original_Mattress) AND ([Tables] = @Original_Tables) AND ([Chairs] = @Original_Chairs) AND ([Fans] = @Original_Fans));
SELECT RoomId, Floor, Room_no, Frontkey, Backkey, Beds, Mattress, Tables, Chairs, Fans FROM Assets WHERE (RoomId = @RoomId)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RoomId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RoomId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Floor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Floor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Room_no", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room_no", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Frontkey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Frontkey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Backkey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Backkey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Beds", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Beds", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mattress", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mattress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tables", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tables", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Chairs", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Chairs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fans", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fans", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RoomId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RoomId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Floor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Floor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Room_no", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room_no", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Frontkey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Frontkey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Backkey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Backkey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Beds", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Beds", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mattress", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mattress", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tables", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tables", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Chairs", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Chairs", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fans", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fans", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::hostelloginpage.Properties.Settings.Default.HostelDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT RoomId, Floor, Room_no, Frontkey, Backkey, Beds, Mattress, Tables, Chairs," +
                " Fans FROM dbo.Assets";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(HostelDBDataSet2.AssetsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual HostelDBDataSet2.AssetsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            HostelDBDataSet2.AssetsDataTable dataTable = new HostelDBDataSet2.AssetsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(HostelDBDataSet2.AssetsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(HostelDBDataSet2 dataSet) {
            return this.Adapter.Update(dataSet, "Assets");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_RoomId, string Original_Floor, int Original_Room_no, int Original_Frontkey, int Original_Backkey, int Original_Beds, int Original_Mattress, int Original_Tables, int Original_Chairs, int Original_Fans) {
            if ((Original_RoomId == null)) {
                throw new global::System.ArgumentNullException("Original_RoomId");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_RoomId));
            }
            if ((Original_Floor == null)) {
                throw new global::System.ArgumentNullException("Original_Floor");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Floor));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_Room_no));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_Frontkey));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_Backkey));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_Beds));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_Mattress));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_Tables));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_Chairs));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_Fans));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string RoomId, string Floor, int Room_no, int Frontkey, int Backkey, int Beds, int Mattress, int Tables, int Chairs, int Fans) {
            if ((RoomId == null)) {
                throw new global::System.ArgumentNullException("RoomId");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(RoomId));
            }
            if ((Floor == null)) {
                throw new global::System.ArgumentNullException("Floor");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Floor));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Room_no));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(Frontkey));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(Backkey));
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(Beds));
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(Mattress));
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(Tables));
            this.Adapter.InsertCommand.Parameters[8].Value = ((int)(Chairs));
            this.Adapter.InsertCommand.Parameters[9].Value = ((int)(Fans));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string RoomId, 
                    string Floor, 
                    int Room_no, 
                    int Frontkey, 
                    int Backkey, 
                    int Beds, 
                    int Mattress, 
                    int Tables, 
                    int Chairs, 
                    int Fans, 
                    string Original_RoomId, 
                    string Original_Floor, 
                    int Original_Room_no, 
                    int Original_Frontkey, 
                    int Original_Backkey, 
                    int Original_Beds, 
                    int Original_Mattress, 
                    int Original_Tables, 
                    int Original_Chairs, 
                    int Original_Fans) {
            if ((RoomId == null)) {
                throw new global::System.ArgumentNullException("RoomId");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(RoomId));
            }
            if ((Floor == null)) {
                throw new global::System.ArgumentNullException("Floor");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Floor));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Room_no));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Frontkey));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Backkey));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Beds));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Mattress));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Tables));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Chairs));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Fans));
            if ((Original_RoomId == null)) {
                throw new global::System.ArgumentNullException("Original_RoomId");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_RoomId));
            }
            if ((Original_Floor == null)) {
                throw new global::System.ArgumentNullException("Original_Floor");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Floor));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_Room_no));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_Frontkey));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_Backkey));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_Beds));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_Mattress));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_Tables));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_Chairs));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Original_Fans));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Floor, 
                    int Room_no, 
                    int Frontkey, 
                    int Backkey, 
                    int Beds, 
                    int Mattress, 
                    int Tables, 
                    int Chairs, 
                    int Fans, 
                    string Original_RoomId, 
                    string Original_Floor, 
                    int Original_Room_no, 
                    int Original_Frontkey, 
                    int Original_Backkey, 
                    int Original_Beds, 
                    int Original_Mattress, 
                    int Original_Tables, 
                    int Original_Chairs, 
                    int Original_Fans) {
            return this.Update(Original_RoomId, Floor, Room_no, Frontkey, Backkey, Beds, Mattress, Tables, Chairs, Fans, Original_RoomId, Original_Floor, Original_Room_no, Original_Frontkey, Original_Backkey, Original_Beds, Original_Mattress, Original_Tables, Original_Chairs, Original_Fans);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class StaffDetailsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public StaffDetailsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "StaffDetails";
            tableMapping.ColumnMappings.Add("EmpId", "EmpId");
            tableMapping.ColumnMappings.Add("Fullname", "Fullname");
            tableMapping.ColumnMappings.Add("Address", "Address");
            tableMapping.ColumnMappings.Add("Category", "Category");
            tableMapping.ColumnMappings.Add("Joined", "Joined");
            tableMapping.ColumnMappings.Add("Sex", "Sex");
            tableMapping.ColumnMappings.Add("NIC", "NIC");
            tableMapping.ColumnMappings.Add("DOB", "DOB");
            tableMapping.ColumnMappings.Add("Contact", "Contact");
            tableMapping.ColumnMappings.Add("Email", "Email");
            tableMapping.ColumnMappings.Add("EmName", "EmName");
            tableMapping.ColumnMappings.Add("EmAddress", "EmAddress");
            tableMapping.ColumnMappings.Add("EmPhone", "EmPhone");
            tableMapping.ColumnMappings.Add("EmRel", "EmRel");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[StaffDetails] WHERE (([EmpId] = @Original_EmpId) AND ([Fullname] = @Original_Fullname) AND ([Address] = @Original_Address) AND ([Category] = @Original_Category) AND ([Joined] = @Original_Joined) AND ([Sex] = @Original_Sex) AND ([NIC] = @Original_NIC) AND ([DOB] = @Original_DOB) AND ([Contact] = @Original_Contact) AND ([Email] = @Original_Email) AND ([EmName] = @Original_EmName) AND ([EmAddress] = @Original_EmAddress) AND ([EmPhone] = @Original_EmPhone) AND ([EmRel] = @Original_EmRel))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmpId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmpId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fullname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fullname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Category", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Category", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Joined", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Joined", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sex", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sex", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NIC", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NIC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DOB", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Contact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contact", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmAddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmAddress", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmPhone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmPhone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmRel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmRel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[StaffDetails] ([EmpId], [Fullname], [Address], [Category], [Joined], [Sex], [NIC], [DOB], [Contact], [Email], [EmName], [EmAddress], [EmPhone], [EmRel]) VALUES (@EmpId, @Fullname, @Address, @Category, @Joined, @Sex, @NIC, @DOB, @Contact, @Email, @EmName, @EmAddress, @EmPhone, @EmRel);
SELECT EmpId, Fullname, Address, Category, Joined, Sex, NIC, DOB, Contact, Email, EmName, EmAddress, EmPhone, EmRel FROM StaffDetails WHERE (EmpId = @EmpId)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmpId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmpId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fullname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fullname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Category", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Category", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Joined", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Joined", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sex", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NIC", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DOB", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Contact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contact", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmAddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmAddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmPhone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmPhone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmRel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmRel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[StaffDetails] SET [EmpId] = @EmpId, [Fullname] = @Fullname, [Address] = @Address, [Category] = @Category, [Joined] = @Joined, [Sex] = @Sex, [NIC] = @NIC, [DOB] = @DOB, [Contact] = @Contact, [Email] = @Email, [EmName] = @EmName, [EmAddress] = @EmAddress, [EmPhone] = @EmPhone, [EmRel] = @EmRel WHERE (([EmpId] = @Original_EmpId) AND ([Fullname] = @Original_Fullname) AND ([Address] = @Original_Address) AND ([Category] = @Original_Category) AND ([Joined] = @Original_Joined) AND ([Sex] = @Original_Sex) AND ([NIC] = @Original_NIC) AND ([DOB] = @Original_DOB) AND ([Contact] = @Original_Contact) AND ([Email] = @Original_Email) AND ([EmName] = @Original_EmName) AND ([EmAddress] = @Original_EmAddress) AND ([EmPhone] = @Original_EmPhone) AND ([EmRel] = @Original_EmRel));
SELECT EmpId, Fullname, Address, Category, Joined, Sex, NIC, DOB, Contact, Email, EmName, EmAddress, EmPhone, EmRel FROM StaffDetails WHERE (EmpId = @EmpId)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmpId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmpId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fullname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fullname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Category", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Category", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Joined", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Joined", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sex", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NIC", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DOB", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Contact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contact", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmAddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmAddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmPhone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmPhone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmRel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmRel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmpId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmpId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fullname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fullname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Category", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Category", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Joined", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Joined", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sex", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sex", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NIC", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NIC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DOB", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Contact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contact", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmAddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmAddress", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmPhone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmPhone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmRel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmRel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::hostelloginpage.Properties.Settings.Default.HostelDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT EmpId, Fullname, Address, Category, Joined, Sex, NIC, DOB, Contact, Email," +
                " EmName, EmAddress, EmPhone, EmRel FROM dbo.StaffDetails";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(HostelDBDataSet2.StaffDetailsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual HostelDBDataSet2.StaffDetailsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            HostelDBDataSet2.StaffDetailsDataTable dataTable = new HostelDBDataSet2.StaffDetailsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(HostelDBDataSet2.StaffDetailsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(HostelDBDataSet2 dataSet) {
            return this.Adapter.Update(dataSet, "StaffDetails");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_EmpId, string Original_Fullname, string Original_Address, string Original_Category, string Original_Joined, string Original_Sex, string Original_NIC, string Original_DOB, string Original_Contact, string Original_Email, string Original_EmName, string Original_EmAddress, string Original_EmPhone, string Original_EmRel) {
            if ((Original_EmpId == null)) {
                throw new global::System.ArgumentNullException("Original_EmpId");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_EmpId));
            }
            if ((Original_Fullname == null)) {
                throw new global::System.ArgumentNullException("Original_Fullname");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Fullname));
            }
            if ((Original_Address == null)) {
                throw new global::System.ArgumentNullException("Original_Address");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Address));
            }
            if ((Original_Category == null)) {
                throw new global::System.ArgumentNullException("Original_Category");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Category));
            }
            if ((Original_Joined == null)) {
                throw new global::System.ArgumentNullException("Original_Joined");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Joined));
            }
            if ((Original_Sex == null)) {
                throw new global::System.ArgumentNullException("Original_Sex");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Sex));
            }
            if ((Original_NIC == null)) {
                throw new global::System.ArgumentNullException("Original_NIC");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_NIC));
            }
            if ((Original_DOB == null)) {
                throw new global::System.ArgumentNullException("Original_DOB");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_DOB));
            }
            if ((Original_Contact == null)) {
                throw new global::System.ArgumentNullException("Original_Contact");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Contact));
            }
            if ((Original_Email == null)) {
                throw new global::System.ArgumentNullException("Original_Email");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_Email));
            }
            if ((Original_EmName == null)) {
                throw new global::System.ArgumentNullException("Original_EmName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_EmName));
            }
            if ((Original_EmAddress == null)) {
                throw new global::System.ArgumentNullException("Original_EmAddress");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_EmAddress));
            }
            if ((Original_EmPhone == null)) {
                throw new global::System.ArgumentNullException("Original_EmPhone");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_EmPhone));
            }
            if ((Original_EmRel == null)) {
                throw new global::System.ArgumentNullException("Original_EmRel");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_EmRel));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string EmpId, string Fullname, string Address, string Category, string Joined, string Sex, string NIC, string DOB, string Contact, string Email, string EmName, string EmAddress, string EmPhone, string EmRel) {
            if ((EmpId == null)) {
                throw new global::System.ArgumentNullException("EmpId");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(EmpId));
            }
            if ((Fullname == null)) {
                throw new global::System.ArgumentNullException("Fullname");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Fullname));
            }
            if ((Address == null)) {
                throw new global::System.ArgumentNullException("Address");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Address));
            }
            if ((Category == null)) {
                throw new global::System.ArgumentNullException("Category");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Category));
            }
            if ((Joined == null)) {
                throw new global::System.ArgumentNullException("Joined");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Joined));
            }
            if ((Sex == null)) {
                throw new global::System.ArgumentNullException("Sex");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Sex));
            }
            if ((NIC == null)) {
                throw new global::System.ArgumentNullException("NIC");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(NIC));
            }
            if ((DOB == null)) {
                throw new global::System.ArgumentNullException("DOB");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(DOB));
            }
            if ((Contact == null)) {
                throw new global::System.ArgumentNullException("Contact");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Contact));
            }
            if ((Email == null)) {
                throw new global::System.ArgumentNullException("Email");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Email));
            }
            if ((EmName == null)) {
                throw new global::System.ArgumentNullException("EmName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(EmName));
            }
            if ((EmAddress == null)) {
                throw new global::System.ArgumentNullException("EmAddress");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(EmAddress));
            }
            if ((EmPhone == null)) {
                throw new global::System.ArgumentNullException("EmPhone");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(EmPhone));
            }
            if ((EmRel == null)) {
                throw new global::System.ArgumentNullException("EmRel");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(EmRel));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string EmpId, 
                    string Fullname, 
                    string Address, 
                    string Category, 
                    string Joined, 
                    string Sex, 
                    string NIC, 
                    string DOB, 
                    string Contact, 
                    string Email, 
                    string EmName, 
                    string EmAddress, 
                    string EmPhone, 
                    string EmRel, 
                    string Original_EmpId, 
                    string Original_Fullname, 
                    string Original_Address, 
                    string Original_Category, 
                    string Original_Joined, 
                    string Original_Sex, 
                    string Original_NIC, 
                    string Original_DOB, 
                    string Original_Contact, 
                    string Original_Email, 
                    string Original_EmName, 
                    string Original_EmAddress, 
                    string Original_EmPhone, 
                    string Original_EmRel) {
            if ((EmpId == null)) {
                throw new global::System.ArgumentNullException("EmpId");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(EmpId));
            }
            if ((Fullname == null)) {
                throw new global::System.ArgumentNullException("Fullname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Fullname));
            }
            if ((Address == null)) {
                throw new global::System.ArgumentNullException("Address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Address));
            }
            if ((Category == null)) {
                throw new global::System.ArgumentNullException("Category");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Category));
            }
            if ((Joined == null)) {
                throw new global::System.ArgumentNullException("Joined");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Joined));
            }
            if ((Sex == null)) {
                throw new global::System.ArgumentNullException("Sex");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Sex));
            }
            if ((NIC == null)) {
                throw new global::System.ArgumentNullException("NIC");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(NIC));
            }
            if ((DOB == null)) {
                throw new global::System.ArgumentNullException("DOB");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(DOB));
            }
            if ((Contact == null)) {
                throw new global::System.ArgumentNullException("Contact");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Contact));
            }
            if ((Email == null)) {
                throw new global::System.ArgumentNullException("Email");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Email));
            }
            if ((EmName == null)) {
                throw new global::System.ArgumentNullException("EmName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(EmName));
            }
            if ((EmAddress == null)) {
                throw new global::System.ArgumentNullException("EmAddress");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(EmAddress));
            }
            if ((EmPhone == null)) {
                throw new global::System.ArgumentNullException("EmPhone");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(EmPhone));
            }
            if ((EmRel == null)) {
                throw new global::System.ArgumentNullException("EmRel");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(EmRel));
            }
            if ((Original_EmpId == null)) {
                throw new global::System.ArgumentNullException("Original_EmpId");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_EmpId));
            }
            if ((Original_Fullname == null)) {
                throw new global::System.ArgumentNullException("Original_Fullname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_Fullname));
            }
            if ((Original_Address == null)) {
                throw new global::System.ArgumentNullException("Original_Address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_Address));
            }
            if ((Original_Category == null)) {
                throw new global::System.ArgumentNullException("Original_Category");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_Category));
            }
            if ((Original_Joined == null)) {
                throw new global::System.ArgumentNullException("Original_Joined");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_Joined));
            }
            if ((Original_Sex == null)) {
                throw new global::System.ArgumentNullException("Original_Sex");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_Sex));
            }
            if ((Original_NIC == null)) {
                throw new global::System.ArgumentNullException("Original_NIC");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_NIC));
            }
            if ((Original_DOB == null)) {
                throw new global::System.ArgumentNullException("Original_DOB");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_DOB));
            }
            if ((Original_Contact == null)) {
                throw new global::System.ArgumentNullException("Original_Contact");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_Contact));
            }
            if ((Original_Email == null)) {
                throw new global::System.ArgumentNullException("Original_Email");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_Email));
            }
            if ((Original_EmName == null)) {
                throw new global::System.ArgumentNullException("Original_EmName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_EmName));
            }
            if ((Original_EmAddress == null)) {
                throw new global::System.ArgumentNullException("Original_EmAddress");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_EmAddress));
            }
            if ((Original_EmPhone == null)) {
                throw new global::System.ArgumentNullException("Original_EmPhone");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_EmPhone));
            }
            if ((Original_EmRel == null)) {
                throw new global::System.ArgumentNullException("Original_EmRel");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_EmRel));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Fullname, 
                    string Address, 
                    string Category, 
                    string Joined, 
                    string Sex, 
                    string NIC, 
                    string DOB, 
                    string Contact, 
                    string Email, 
                    string EmName, 
                    string EmAddress, 
                    string EmPhone, 
                    string EmRel, 
                    string Original_EmpId, 
                    string Original_Fullname, 
                    string Original_Address, 
                    string Original_Category, 
                    string Original_Joined, 
                    string Original_Sex, 
                    string Original_NIC, 
                    string Original_DOB, 
                    string Original_Contact, 
                    string Original_Email, 
                    string Original_EmName, 
                    string Original_EmAddress, 
                    string Original_EmPhone, 
                    string Original_EmRel) {
            return this.Update(Original_EmpId, Fullname, Address, Category, Joined, Sex, NIC, DOB, Contact, Email, EmName, EmAddress, EmPhone, EmRel, Original_EmpId, Original_Fullname, Original_Address, Original_Category, Original_Joined, Original_Sex, Original_NIC, Original_DOB, Original_Contact, Original_Email, Original_EmName, Original_EmAddress, Original_EmPhone, Original_EmRel);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class StudentTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public StudentTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Student";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("Regno", "Regno");
            tableMapping.ColumnMappings.Add("Fullname", "Fullname");
            tableMapping.ColumnMappings.Add("Surname", "Surname");
            tableMapping.ColumnMappings.Add("Address", "Address");
            tableMapping.ColumnMappings.Add("District", "District");
            tableMapping.ColumnMappings.Add("GSdivision", "GSdivision");
            tableMapping.ColumnMappings.Add("DSdivision", "DSdivision");
            tableMapping.ColumnMappings.Add("Sex", "Sex");
            tableMapping.ColumnMappings.Add("NICno", "NICno");
            tableMapping.ColumnMappings.Add("DOB", "DOB");
            tableMapping.ColumnMappings.Add("Faculty", "Faculty");
            tableMapping.ColumnMappings.Add("Course", "Course");
            tableMapping.ColumnMappings.Add("Yearofstudy", "Yearofstudy");
            tableMapping.ColumnMappings.Add("Contact", "Contact");
            tableMapping.ColumnMappings.Add("Email", "Email");
            tableMapping.ColumnMappings.Add("Medicalhistory", "Medicalhistory");
            tableMapping.ColumnMappings.Add("Guardianname", "Guardianname");
            tableMapping.ColumnMappings.Add("Guardianrelationship", "Guardianrelationship");
            tableMapping.ColumnMappings.Add("GuardianAddress", "GuardianAddress");
            tableMapping.ColumnMappings.Add("Guardiancontact", "Guardiancontact");
            tableMapping.ColumnMappings.Add("Nearbypolice", "Nearbypolice");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Student] WHERE (([Id] = @Original_Id) AND ([Regno] = @Original_Regno) AND ([Fullname] = @Original_Fullname) AND ([Surname] = @Original_Surname) AND ([Address] = @Original_Address) AND ([District] = @Original_District) AND ([GSdivision] = @Original_GSdivision) AND ([DSdivision] = @Original_DSdivision) AND ([Sex] = @Original_Sex) AND ([NICno] = @Original_NICno) AND ([DOB] = @Original_DOB) AND ([Faculty] = @Original_Faculty) AND ([Course] = @Original_Course) AND ([Yearofstudy] = @Original_Yearofstudy) AND ([Contact] = @Original_Contact) AND ([Email] = @Original_Email) AND ([Medicalhistory] = @Original_Medicalhistory) AND ([Guardianname] = @Original_Guardianname) AND ([Guardianrelationship] = @Original_Guardianrelationship) AND ([GuardianAddress] = @Original_GuardianAddress) AND ([Guardiancontact] = @Original_Guardiancontact) AND ([Nearbypolice] = @Original_Nearbypolice))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Regno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regno", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fullname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fullname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Surname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Surname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_District", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "District", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GSdivision", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GSdivision", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DSdivision", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DSdivision", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sex", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sex", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NICno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NICno", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DOB", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Faculty", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Faculty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Course", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Course", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Yearofstudy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Yearofstudy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Contact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contact", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Medicalhistory", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Medicalhistory", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Guardianname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardianname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Guardianrelationship", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardianrelationship", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GuardianAddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuardianAddress", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Guardiancontact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardiancontact", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nearbypolice", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nearbypolice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Student] ([Regno], [Fullname], [Surname], [Address], [District], [GSdivision], [DSdivision], [Sex], [NICno], [DOB], [Faculty], [Course], [Yearofstudy], [Contact], [Email], [Medicalhistory], [Guardianname], [Guardianrelationship], [GuardianAddress], [Guardiancontact], [Nearbypolice]) VALUES (@Regno, @Fullname, @Surname, @Address, @District, @GSdivision, @DSdivision, @Sex, @NICno, @DOB, @Faculty, @Course, @Yearofstudy, @Contact, @Email, @Medicalhistory, @Guardianname, @Guardianrelationship, @GuardianAddress, @Guardiancontact, @Nearbypolice);
SELECT Id, Regno, Fullname, Surname, Address, District, GSdivision, DSdivision, Sex, NICno, DOB, Faculty, Course, Yearofstudy, Contact, Email, Medicalhistory, Guardianname, Guardianrelationship, GuardianAddress, Guardiancontact, Nearbypolice FROM Student WHERE (Id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regno", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fullname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fullname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Surname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Surname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@District", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "District", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GSdivision", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GSdivision", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DSdivision", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DSdivision", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sex", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NICno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NICno", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DOB", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Faculty", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Faculty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Course", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Course", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Yearofstudy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Yearofstudy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Contact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contact", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Medicalhistory", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Medicalhistory", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Guardianname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardianname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Guardianrelationship", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardianrelationship", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GuardianAddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuardianAddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Guardiancontact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardiancontact", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nearbypolice", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nearbypolice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Student] SET [Regno] = @Regno, [Fullname] = @Fullname, [Surname] = " +
                "@Surname, [Address] = @Address, [District] = @District, [GSdivision] = @GSdivisi" +
                "on, [DSdivision] = @DSdivision, [Sex] = @Sex, [NICno] = @NICno, [DOB] = @DOB, [F" +
                "aculty] = @Faculty, [Course] = @Course, [Yearofstudy] = @Yearofstudy, [Contact] " +
                "= @Contact, [Email] = @Email, [Medicalhistory] = @Medicalhistory, [Guardianname]" +
                " = @Guardianname, [Guardianrelationship] = @Guardianrelationship, [GuardianAddre" +
                "ss] = @GuardianAddress, [Guardiancontact] = @Guardiancontact, [Nearbypolice] = @" +
                "Nearbypolice WHERE (([Id] = @Original_Id) AND ([Regno] = @Original_Regno) AND ([" +
                "Fullname] = @Original_Fullname) AND ([Surname] = @Original_Surname) AND ([Addres" +
                "s] = @Original_Address) AND ([District] = @Original_District) AND ([GSdivision] " +
                "= @Original_GSdivision) AND ([DSdivision] = @Original_DSdivision) AND ([Sex] = @" +
                "Original_Sex) AND ([NICno] = @Original_NICno) AND ([DOB] = @Original_DOB) AND ([" +
                "Faculty] = @Original_Faculty) AND ([Course] = @Original_Course) AND ([Yearofstud" +
                "y] = @Original_Yearofstudy) AND ([Contact] = @Original_Contact) AND ([Email] = @" +
                "Original_Email) AND ([Medicalhistory] = @Original_Medicalhistory) AND ([Guardian" +
                "name] = @Original_Guardianname) AND ([Guardianrelationship] = @Original_Guardian" +
                "relationship) AND ([GuardianAddress] = @Original_GuardianAddress) AND ([Guardian" +
                "contact] = @Original_Guardiancontact) AND ([Nearbypolice] = @Original_Nearbypoli" +
                "ce));\r\nSELECT Id, Regno, Fullname, Surname, Address, District, GSdivision, DSdiv" +
                "ision, Sex, NICno, DOB, Faculty, Course, Yearofstudy, Contact, Email, Medicalhis" +
                "tory, Guardianname, Guardianrelationship, GuardianAddress, Guardiancontact, Near" +
                "bypolice FROM Student WHERE (Id = @Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regno", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fullname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fullname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Surname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Surname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@District", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "District", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GSdivision", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GSdivision", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DSdivision", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DSdivision", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sex", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NICno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NICno", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DOB", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Faculty", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Faculty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Course", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Course", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Yearofstudy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Yearofstudy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Contact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contact", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Medicalhistory", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Medicalhistory", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Guardianname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardianname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Guardianrelationship", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardianrelationship", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GuardianAddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuardianAddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Guardiancontact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardiancontact", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nearbypolice", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nearbypolice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Regno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regno", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fullname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fullname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Surname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Surname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_District", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "District", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GSdivision", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GSdivision", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DSdivision", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DSdivision", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sex", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sex", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NICno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NICno", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DOB", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Faculty", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Faculty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Course", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Course", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Yearofstudy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Yearofstudy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Contact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contact", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Medicalhistory", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Medicalhistory", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Guardianname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardianname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Guardianrelationship", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardianrelationship", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GuardianAddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuardianAddress", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Guardiancontact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardiancontact", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nearbypolice", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nearbypolice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::hostelloginpage.Properties.Settings.Default.HostelDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Id, Regno, Fullname, Surname, Address, District, GSdivision, DSdivision, Sex, NICno, DOB, Faculty, Course, Yearofstudy, Contact, Email, Medicalhistory, Guardianname, Guardianrelationship, GuardianAddress, Guardiancontact, Nearbypolice FROM dbo.Student";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(HostelDBDataSet2.StudentDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual HostelDBDataSet2.StudentDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            HostelDBDataSet2.StudentDataTable dataTable = new HostelDBDataSet2.StudentDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(HostelDBDataSet2.StudentDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(HostelDBDataSet2 dataSet) {
            return this.Adapter.Update(dataSet, "Student");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_Id, 
                    string Original_Regno, 
                    string Original_Fullname, 
                    string Original_Surname, 
                    string Original_Address, 
                    string Original_District, 
                    string Original_GSdivision, 
                    string Original_DSdivision, 
                    string Original_Sex, 
                    string Original_NICno, 
                    string Original_DOB, 
                    string Original_Faculty, 
                    string Original_Course, 
                    string Original_Yearofstudy, 
                    string Original_Contact, 
                    string Original_Email, 
                    string Original_Medicalhistory, 
                    string Original_Guardianname, 
                    string Original_Guardianrelationship, 
                    string Original_GuardianAddress, 
                    string Original_Guardiancontact, 
                    string Original_Nearbypolice) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            if ((Original_Regno == null)) {
                throw new global::System.ArgumentNullException("Original_Regno");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Regno));
            }
            if ((Original_Fullname == null)) {
                throw new global::System.ArgumentNullException("Original_Fullname");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Fullname));
            }
            if ((Original_Surname == null)) {
                throw new global::System.ArgumentNullException("Original_Surname");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Surname));
            }
            if ((Original_Address == null)) {
                throw new global::System.ArgumentNullException("Original_Address");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Address));
            }
            if ((Original_District == null)) {
                throw new global::System.ArgumentNullException("Original_District");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_District));
            }
            if ((Original_GSdivision == null)) {
                throw new global::System.ArgumentNullException("Original_GSdivision");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_GSdivision));
            }
            if ((Original_DSdivision == null)) {
                throw new global::System.ArgumentNullException("Original_DSdivision");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_DSdivision));
            }
            if ((Original_Sex == null)) {
                throw new global::System.ArgumentNullException("Original_Sex");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Sex));
            }
            if ((Original_NICno == null)) {
                throw new global::System.ArgumentNullException("Original_NICno");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_NICno));
            }
            if ((Original_DOB == null)) {
                throw new global::System.ArgumentNullException("Original_DOB");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_DOB));
            }
            if ((Original_Faculty == null)) {
                throw new global::System.ArgumentNullException("Original_Faculty");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_Faculty));
            }
            if ((Original_Course == null)) {
                throw new global::System.ArgumentNullException("Original_Course");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Course));
            }
            if ((Original_Yearofstudy == null)) {
                throw new global::System.ArgumentNullException("Original_Yearofstudy");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_Yearofstudy));
            }
            if ((Original_Contact == null)) {
                throw new global::System.ArgumentNullException("Original_Contact");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_Contact));
            }
            if ((Original_Email == null)) {
                throw new global::System.ArgumentNullException("Original_Email");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_Email));
            }
            if ((Original_Medicalhistory == null)) {
                throw new global::System.ArgumentNullException("Original_Medicalhistory");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_Medicalhistory));
            }
            if ((Original_Guardianname == null)) {
                throw new global::System.ArgumentNullException("Original_Guardianname");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_Guardianname));
            }
            if ((Original_Guardianrelationship == null)) {
                throw new global::System.ArgumentNullException("Original_Guardianrelationship");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_Guardianrelationship));
            }
            if ((Original_GuardianAddress == null)) {
                throw new global::System.ArgumentNullException("Original_GuardianAddress");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_GuardianAddress));
            }
            if ((Original_Guardiancontact == null)) {
                throw new global::System.ArgumentNullException("Original_Guardiancontact");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_Guardiancontact));
            }
            if ((Original_Nearbypolice == null)) {
                throw new global::System.ArgumentNullException("Original_Nearbypolice");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_Nearbypolice));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string Regno, 
                    string Fullname, 
                    string Surname, 
                    string Address, 
                    string District, 
                    string GSdivision, 
                    string DSdivision, 
                    string Sex, 
                    string NICno, 
                    string DOB, 
                    string Faculty, 
                    string Course, 
                    string Yearofstudy, 
                    string Contact, 
                    string Email, 
                    string Medicalhistory, 
                    string Guardianname, 
                    string Guardianrelationship, 
                    string GuardianAddress, 
                    string Guardiancontact, 
                    string Nearbypolice) {
            if ((Regno == null)) {
                throw new global::System.ArgumentNullException("Regno");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Regno));
            }
            if ((Fullname == null)) {
                throw new global::System.ArgumentNullException("Fullname");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Fullname));
            }
            if ((Surname == null)) {
                throw new global::System.ArgumentNullException("Surname");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Surname));
            }
            if ((Address == null)) {
                throw new global::System.ArgumentNullException("Address");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Address));
            }
            if ((District == null)) {
                throw new global::System.ArgumentNullException("District");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(District));
            }
            if ((GSdivision == null)) {
                throw new global::System.ArgumentNullException("GSdivision");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(GSdivision));
            }
            if ((DSdivision == null)) {
                throw new global::System.ArgumentNullException("DSdivision");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(DSdivision));
            }
            if ((Sex == null)) {
                throw new global::System.ArgumentNullException("Sex");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Sex));
            }
            if ((NICno == null)) {
                throw new global::System.ArgumentNullException("NICno");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(NICno));
            }
            if ((DOB == null)) {
                throw new global::System.ArgumentNullException("DOB");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(DOB));
            }
            if ((Faculty == null)) {
                throw new global::System.ArgumentNullException("Faculty");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Faculty));
            }
            if ((Course == null)) {
                throw new global::System.ArgumentNullException("Course");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Course));
            }
            if ((Yearofstudy == null)) {
                throw new global::System.ArgumentNullException("Yearofstudy");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(Yearofstudy));
            }
            if ((Contact == null)) {
                throw new global::System.ArgumentNullException("Contact");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(Contact));
            }
            if ((Email == null)) {
                throw new global::System.ArgumentNullException("Email");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(Email));
            }
            if ((Medicalhistory == null)) {
                throw new global::System.ArgumentNullException("Medicalhistory");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(Medicalhistory));
            }
            if ((Guardianname == null)) {
                throw new global::System.ArgumentNullException("Guardianname");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(Guardianname));
            }
            if ((Guardianrelationship == null)) {
                throw new global::System.ArgumentNullException("Guardianrelationship");
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(Guardianrelationship));
            }
            if ((GuardianAddress == null)) {
                throw new global::System.ArgumentNullException("GuardianAddress");
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(GuardianAddress));
            }
            if ((Guardiancontact == null)) {
                throw new global::System.ArgumentNullException("Guardiancontact");
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(Guardiancontact));
            }
            if ((Nearbypolice == null)) {
                throw new global::System.ArgumentNullException("Nearbypolice");
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(Nearbypolice));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Regno, 
                    string Fullname, 
                    string Surname, 
                    string Address, 
                    string District, 
                    string GSdivision, 
                    string DSdivision, 
                    string Sex, 
                    string NICno, 
                    string DOB, 
                    string Faculty, 
                    string Course, 
                    string Yearofstudy, 
                    string Contact, 
                    string Email, 
                    string Medicalhistory, 
                    string Guardianname, 
                    string Guardianrelationship, 
                    string GuardianAddress, 
                    string Guardiancontact, 
                    string Nearbypolice, 
                    int Original_Id, 
                    string Original_Regno, 
                    string Original_Fullname, 
                    string Original_Surname, 
                    string Original_Address, 
                    string Original_District, 
                    string Original_GSdivision, 
                    string Original_DSdivision, 
                    string Original_Sex, 
                    string Original_NICno, 
                    string Original_DOB, 
                    string Original_Faculty, 
                    string Original_Course, 
                    string Original_Yearofstudy, 
                    string Original_Contact, 
                    string Original_Email, 
                    string Original_Medicalhistory, 
                    string Original_Guardianname, 
                    string Original_Guardianrelationship, 
                    string Original_GuardianAddress, 
                    string Original_Guardiancontact, 
                    string Original_Nearbypolice, 
                    int Id) {
            if ((Regno == null)) {
                throw new global::System.ArgumentNullException("Regno");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Regno));
            }
            if ((Fullname == null)) {
                throw new global::System.ArgumentNullException("Fullname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Fullname));
            }
            if ((Surname == null)) {
                throw new global::System.ArgumentNullException("Surname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Surname));
            }
            if ((Address == null)) {
                throw new global::System.ArgumentNullException("Address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Address));
            }
            if ((District == null)) {
                throw new global::System.ArgumentNullException("District");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(District));
            }
            if ((GSdivision == null)) {
                throw new global::System.ArgumentNullException("GSdivision");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(GSdivision));
            }
            if ((DSdivision == null)) {
                throw new global::System.ArgumentNullException("DSdivision");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(DSdivision));
            }
            if ((Sex == null)) {
                throw new global::System.ArgumentNullException("Sex");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Sex));
            }
            if ((NICno == null)) {
                throw new global::System.ArgumentNullException("NICno");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(NICno));
            }
            if ((DOB == null)) {
                throw new global::System.ArgumentNullException("DOB");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(DOB));
            }
            if ((Faculty == null)) {
                throw new global::System.ArgumentNullException("Faculty");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Faculty));
            }
            if ((Course == null)) {
                throw new global::System.ArgumentNullException("Course");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Course));
            }
            if ((Yearofstudy == null)) {
                throw new global::System.ArgumentNullException("Yearofstudy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Yearofstudy));
            }
            if ((Contact == null)) {
                throw new global::System.ArgumentNullException("Contact");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Contact));
            }
            if ((Email == null)) {
                throw new global::System.ArgumentNullException("Email");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Email));
            }
            if ((Medicalhistory == null)) {
                throw new global::System.ArgumentNullException("Medicalhistory");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Medicalhistory));
            }
            if ((Guardianname == null)) {
                throw new global::System.ArgumentNullException("Guardianname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Guardianname));
            }
            if ((Guardianrelationship == null)) {
                throw new global::System.ArgumentNullException("Guardianrelationship");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Guardianrelationship));
            }
            if ((GuardianAddress == null)) {
                throw new global::System.ArgumentNullException("GuardianAddress");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(GuardianAddress));
            }
            if ((Guardiancontact == null)) {
                throw new global::System.ArgumentNullException("Guardiancontact");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Guardiancontact));
            }
            if ((Nearbypolice == null)) {
                throw new global::System.ArgumentNullException("Nearbypolice");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Nearbypolice));
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(Original_Id));
            if ((Original_Regno == null)) {
                throw new global::System.ArgumentNullException("Original_Regno");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_Regno));
            }
            if ((Original_Fullname == null)) {
                throw new global::System.ArgumentNullException("Original_Fullname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_Fullname));
            }
            if ((Original_Surname == null)) {
                throw new global::System.ArgumentNullException("Original_Surname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_Surname));
            }
            if ((Original_Address == null)) {
                throw new global::System.ArgumentNullException("Original_Address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_Address));
            }
            if ((Original_District == null)) {
                throw new global::System.ArgumentNullException("Original_District");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_District));
            }
            if ((Original_GSdivision == null)) {
                throw new global::System.ArgumentNullException("Original_GSdivision");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_GSdivision));
            }
            if ((Original_DSdivision == null)) {
                throw new global::System.ArgumentNullException("Original_DSdivision");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_DSdivision));
            }
            if ((Original_Sex == null)) {
                throw new global::System.ArgumentNullException("Original_Sex");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_Sex));
            }
            if ((Original_NICno == null)) {
                throw new global::System.ArgumentNullException("Original_NICno");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_NICno));
            }
            if ((Original_DOB == null)) {
                throw new global::System.ArgumentNullException("Original_DOB");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_DOB));
            }
            if ((Original_Faculty == null)) {
                throw new global::System.ArgumentNullException("Original_Faculty");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_Faculty));
            }
            if ((Original_Course == null)) {
                throw new global::System.ArgumentNullException("Original_Course");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_Course));
            }
            if ((Original_Yearofstudy == null)) {
                throw new global::System.ArgumentNullException("Original_Yearofstudy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_Yearofstudy));
            }
            if ((Original_Contact == null)) {
                throw new global::System.ArgumentNullException("Original_Contact");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_Contact));
            }
            if ((Original_Email == null)) {
                throw new global::System.ArgumentNullException("Original_Email");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_Email));
            }
            if ((Original_Medicalhistory == null)) {
                throw new global::System.ArgumentNullException("Original_Medicalhistory");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_Medicalhistory));
            }
            if ((Original_Guardianname == null)) {
                throw new global::System.ArgumentNullException("Original_Guardianname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_Guardianname));
            }
            if ((Original_Guardianrelationship == null)) {
                throw new global::System.ArgumentNullException("Original_Guardianrelationship");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Original_Guardianrelationship));
            }
            if ((Original_GuardianAddress == null)) {
                throw new global::System.ArgumentNullException("Original_GuardianAddress");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_GuardianAddress));
            }
            if ((Original_Guardiancontact == null)) {
                throw new global::System.ArgumentNullException("Original_Guardiancontact");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_Guardiancontact));
            }
            if ((Original_Nearbypolice == null)) {
                throw new global::System.ArgumentNullException("Original_Nearbypolice");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_Nearbypolice));
            }
            this.Adapter.UpdateCommand.Parameters[43].Value = ((int)(Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Regno, 
                    string Fullname, 
                    string Surname, 
                    string Address, 
                    string District, 
                    string GSdivision, 
                    string DSdivision, 
                    string Sex, 
                    string NICno, 
                    string DOB, 
                    string Faculty, 
                    string Course, 
                    string Yearofstudy, 
                    string Contact, 
                    string Email, 
                    string Medicalhistory, 
                    string Guardianname, 
                    string Guardianrelationship, 
                    string GuardianAddress, 
                    string Guardiancontact, 
                    string Nearbypolice, 
                    int Original_Id, 
                    string Original_Regno, 
                    string Original_Fullname, 
                    string Original_Surname, 
                    string Original_Address, 
                    string Original_District, 
                    string Original_GSdivision, 
                    string Original_DSdivision, 
                    string Original_Sex, 
                    string Original_NICno, 
                    string Original_DOB, 
                    string Original_Faculty, 
                    string Original_Course, 
                    string Original_Yearofstudy, 
                    string Original_Contact, 
                    string Original_Email, 
                    string Original_Medicalhistory, 
                    string Original_Guardianname, 
                    string Original_Guardianrelationship, 
                    string Original_GuardianAddress, 
                    string Original_Guardiancontact, 
                    string Original_Nearbypolice) {
            return this.Update(Regno, Fullname, Surname, Address, District, GSdivision, DSdivision, Sex, NICno, DOB, Faculty, Course, Yearofstudy, Contact, Email, Medicalhistory, Guardianname, Guardianrelationship, GuardianAddress, Guardiancontact, Nearbypolice, Original_Id, Original_Regno, Original_Fullname, Original_Surname, Original_Address, Original_District, Original_GSdivision, Original_DSdivision, Original_Sex, Original_NICno, Original_DOB, Original_Faculty, Original_Course, Original_Yearofstudy, Original_Contact, Original_Email, Original_Medicalhistory, Original_Guardianname, Original_Guardianrelationship, Original_GuardianAddress, Original_Guardiancontact, Original_Nearbypolice, Original_Id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class StudentDetailTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public StudentDetailTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "StudentDetail";
            tableMapping.ColumnMappings.Add("Student Reg_no", "Student Reg_no");
            tableMapping.ColumnMappings.Add("Fullname", "Fullname");
            tableMapping.ColumnMappings.Add("Surname", "Surname");
            tableMapping.ColumnMappings.Add("Address", "Address");
            tableMapping.ColumnMappings.Add("District", "District");
            tableMapping.ColumnMappings.Add("GS_Division", "GS_Division");
            tableMapping.ColumnMappings.Add("DS_Division", "DS_Division");
            tableMapping.ColumnMappings.Add("Sex", "Sex");
            tableMapping.ColumnMappings.Add("NIC_no", "NIC_no");
            tableMapping.ColumnMappings.Add("Date.Of.Birth", "Date_Of_Birth");
            tableMapping.ColumnMappings.Add("Faculty", "Faculty");
            tableMapping.ColumnMappings.Add("Course", "Course");
            tableMapping.ColumnMappings.Add("YearofStudy", "YearofStudy");
            tableMapping.ColumnMappings.Add("Contact_No", "Contact_No");
            tableMapping.ColumnMappings.Add("E-mail ID", "E-mail ID");
            tableMapping.ColumnMappings.Add("MedicalHistrory", "MedicalHistrory");
            tableMapping.ColumnMappings.Add("Guardian_Name", "Guardian_Name");
            tableMapping.ColumnMappings.Add("Guardian_Relationship", "Guardian_Relationship");
            tableMapping.ColumnMappings.Add("Guardian_Address", "Guardian_Address");
            tableMapping.ColumnMappings.Add("Guardian_contactno", "Guardian_contactno");
            tableMapping.ColumnMappings.Add("Police_near", "Police_near");
            tableMapping.ColumnMappings.Add("Floor_no", "Floor_no");
            tableMapping.ColumnMappings.Add("Room", "Room");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[StudentDetail] WHERE (([Student Reg_no] = @Original_Student_Reg_no) AND ([Fullname] = @Original_Fullname) AND ([Surname] = @Original_Surname) AND ([Address] = @Original_Address) AND ([District] = @Original_District) AND ([GS_Division] = @Original_GS_Division) AND ([DS_Division] = @Original_DS_Division) AND ([Sex] = @Original_Sex) AND ([NIC_no] = @Original_NIC_no) AND ([Date.Of.Birth] = @p2) AND ([Faculty] = @Original_Faculty) AND ([Course] = @Original_Course) AND ([YearofStudy] = @Original_YearofStudy) AND ([Contact_No] = @Original_Contact_No) AND ([E-mail ID] = @p4) AND ([MedicalHistrory] = @Original_MedicalHistrory) AND ([Guardian_Name] = @Original_Guardian_Name) AND ([Guardian_Relationship] = @Original_Guardian_Relationship) AND ([Guardian_Address] = @Original_Guardian_Address) AND ([Guardian_contactno] = @Original_Guardian_contactno) AND ([Police_near] = @Original_Police_near) AND ([Floor_no] = @Original_Floor_no) AND ([Room] = @Original_Room))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Student_Reg_no", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Student Reg_no", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fullname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fullname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Surname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Surname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_District", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "District", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GS_Division", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GS_Division", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DS_Division", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DS_Division", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sex", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sex", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NIC_no", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NIC_no", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date.Of.Birth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Faculty", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Faculty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Course", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Course", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YearofStudy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YearofStudy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Contact_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contact_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E-mail ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MedicalHistrory", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MedicalHistrory", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Guardian_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Guardian_Relationship", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_Relationship", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Guardian_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Guardian_contactno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_contactno", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Police_near", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Police_near", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Floor_no", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Floor_no", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Room", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[StudentDetail] ([Student Reg_no], [Fullname], [Surname], [Address], [District], [GS_Division], [DS_Division], [Sex], [NIC_no], [Date.Of.Birth], [Faculty], [Course], [YearofStudy], [Contact_No], [E-mail ID], [MedicalHistrory], [Guardian_Name], [Guardian_Relationship], [Guardian_Address], [Guardian_contactno], [Police_near], [Floor_no], [Room]) VALUES (@Student_Reg_no, @Fullname, @Surname, @Address, @District, @GS_Division, @DS_Division, @Sex, @NIC_no, @p1, @Faculty, @Course, @YearofStudy, @Contact_No, @p3, @MedicalHistrory, @Guardian_Name, @Guardian_Relationship, @Guardian_Address, @Guardian_contactno, @Police_near, @Floor_no, @Room);
SELECT [Student Reg_no], Fullname, Surname, Address, District, GS_Division, DS_Division, Sex, NIC_no, [Date.Of.Birth], Faculty, Course, YearofStudy, Contact_No, [E-mail ID], MedicalHistrory, Guardian_Name, Guardian_Relationship, Guardian_Address, Guardian_contactno, Police_near, Floor_no, Room FROM StudentDetail WHERE ([Student Reg_no] = @Student_Reg_no)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Student_Reg_no", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Student Reg_no", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fullname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fullname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Surname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Surname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@District", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "District", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GS_Division", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GS_Division", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DS_Division", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DS_Division", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sex", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NIC_no", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NIC_no", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date.Of.Birth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Faculty", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Faculty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Course", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Course", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YearofStudy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YearofStudy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Contact_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contact_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E-mail ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MedicalHistrory", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MedicalHistrory", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Guardian_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Guardian_Relationship", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_Relationship", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Guardian_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Guardian_contactno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_contactno", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Police_near", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Police_near", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Floor_no", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Floor_no", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Room", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[StudentDetail] SET [Student Reg_no] = @Student_Reg_no, [Fullname] =" +
                " @Fullname, [Surname] = @Surname, [Address] = @Address, [District] = @District, " +
                "[GS_Division] = @GS_Division, [DS_Division] = @DS_Division, [Sex] = @Sex, [NIC_n" +
                "o] = @NIC_no, [Date.Of.Birth] = @p1, [Faculty] = @Faculty, [Course] = @Course, [" +
                "YearofStudy] = @YearofStudy, [Contact_No] = @Contact_No, [E-mail ID] = @p3, [Med" +
                "icalHistrory] = @MedicalHistrory, [Guardian_Name] = @Guardian_Name, [Guardian_Re" +
                "lationship] = @Guardian_Relationship, [Guardian_Address] = @Guardian_Address, [G" +
                "uardian_contactno] = @Guardian_contactno, [Police_near] = @Police_near, [Floor_n" +
                "o] = @Floor_no, [Room] = @Room WHERE (([Student Reg_no] = @Original_Student_Reg_" +
                "no) AND ([Fullname] = @Original_Fullname) AND ([Surname] = @Original_Surname) AN" +
                "D ([Address] = @Original_Address) AND ([District] = @Original_District) AND ([GS" +
                "_Division] = @Original_GS_Division) AND ([DS_Division] = @Original_DS_Division) " +
                "AND ([Sex] = @Original_Sex) AND ([NIC_no] = @Original_NIC_no) AND ([Date.Of.Birt" +
                "h] = @p2) AND ([Faculty] = @Original_Faculty) AND ([Course] = @Original_Course) " +
                "AND ([YearofStudy] = @Original_YearofStudy) AND ([Contact_No] = @Original_Contac" +
                "t_No) AND ([E-mail ID] = @p4) AND ([MedicalHistrory] = @Original_MedicalHistrory" +
                ") AND ([Guardian_Name] = @Original_Guardian_Name) AND ([Guardian_Relationship] =" +
                " @Original_Guardian_Relationship) AND ([Guardian_Address] = @Original_Guardian_A" +
                "ddress) AND ([Guardian_contactno] = @Original_Guardian_contactno) AND ([Police_n" +
                "ear] = @Original_Police_near) AND ([Floor_no] = @Original_Floor_no) AND ([Room] " +
                "= @Original_Room));\r\nSELECT [Student Reg_no], Fullname, Surname, Address, Distri" +
                "ct, GS_Division, DS_Division, Sex, NIC_no, [Date.Of.Birth], Faculty, Course, Yea" +
                "rofStudy, Contact_No, [E-mail ID], MedicalHistrory, Guardian_Name, Guardian_Rela" +
                "tionship, Guardian_Address, Guardian_contactno, Police_near, Floor_no, Room FROM" +
                " StudentDetail WHERE ([Student Reg_no] = @Student_Reg_no)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Student_Reg_no", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Student Reg_no", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fullname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fullname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Surname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Surname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@District", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "District", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GS_Division", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GS_Division", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DS_Division", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DS_Division", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sex", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NIC_no", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NIC_no", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date.Of.Birth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Faculty", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Faculty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Course", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Course", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YearofStudy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YearofStudy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Contact_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contact_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E-mail ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MedicalHistrory", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MedicalHistrory", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Guardian_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Guardian_Relationship", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_Relationship", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Guardian_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Guardian_contactno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_contactno", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Police_near", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Police_near", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Floor_no", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Floor_no", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Room", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Student_Reg_no", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Student Reg_no", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fullname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fullname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Surname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Surname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_District", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "District", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GS_Division", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GS_Division", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DS_Division", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DS_Division", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sex", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sex", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NIC_no", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NIC_no", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date.Of.Birth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Faculty", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Faculty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Course", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Course", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YearofStudy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YearofStudy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Contact_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contact_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E-mail ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MedicalHistrory", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MedicalHistrory", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Guardian_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Guardian_Relationship", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_Relationship", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Guardian_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Guardian_contactno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_contactno", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Police_near", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Police_near", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Floor_no", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Floor_no", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Room", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::hostelloginpage.Properties.Settings.Default.HostelDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT [Student Reg_no], Fullname, Surname, Address, District, GS_Division, DS_Division, Sex, NIC_no, [Date.Of.Birth], Faculty, Course, YearofStudy, Contact_No, [E-mail ID], MedicalHistrory, Guardian_Name, Guardian_Relationship, Guardian_Address, Guardian_contactno, Police_near, Floor_no, Room FROM dbo.StudentDetail";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(HostelDBDataSet2.StudentDetailDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual HostelDBDataSet2.StudentDetailDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            HostelDBDataSet2.StudentDetailDataTable dataTable = new HostelDBDataSet2.StudentDetailDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(HostelDBDataSet2.StudentDetailDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(HostelDBDataSet2 dataSet) {
            return this.Adapter.Update(dataSet, "StudentDetail");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_Student_Reg_no, 
                    string Original_Fullname, 
                    string Original_Surname, 
                    string Original_Address, 
                    string Original_District, 
                    string Original_GS_Division, 
                    string Original_DS_Division, 
                    string Original_Sex, 
                    string Original_NIC_no, 
                    string p2, 
                    string Original_Faculty, 
                    string Original_Course, 
                    string Original_YearofStudy, 
                    string Original_Contact_No, 
                    string p4, 
                    string Original_MedicalHistrory, 
                    string Original_Guardian_Name, 
                    string Original_Guardian_Relationship, 
                    string Original_Guardian_Address, 
                    string Original_Guardian_contactno, 
                    string Original_Police_near, 
                    string Original_Floor_no, 
                    int Original_Room) {
            if ((Original_Student_Reg_no == null)) {
                throw new global::System.ArgumentNullException("Original_Student_Reg_no");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_Student_Reg_no));
            }
            if ((Original_Fullname == null)) {
                throw new global::System.ArgumentNullException("Original_Fullname");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Fullname));
            }
            if ((Original_Surname == null)) {
                throw new global::System.ArgumentNullException("Original_Surname");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Surname));
            }
            if ((Original_Address == null)) {
                throw new global::System.ArgumentNullException("Original_Address");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Address));
            }
            if ((Original_District == null)) {
                throw new global::System.ArgumentNullException("Original_District");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_District));
            }
            if ((Original_GS_Division == null)) {
                throw new global::System.ArgumentNullException("Original_GS_Division");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_GS_Division));
            }
            if ((Original_DS_Division == null)) {
                throw new global::System.ArgumentNullException("Original_DS_Division");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_DS_Division));
            }
            if ((Original_Sex == null)) {
                throw new global::System.ArgumentNullException("Original_Sex");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Sex));
            }
            if ((Original_NIC_no == null)) {
                throw new global::System.ArgumentNullException("Original_NIC_no");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_NIC_no));
            }
            if ((p2 == null)) {
                throw new global::System.ArgumentNullException("p2");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(p2));
            }
            if ((Original_Faculty == null)) {
                throw new global::System.ArgumentNullException("Original_Faculty");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Faculty));
            }
            if ((Original_Course == null)) {
                throw new global::System.ArgumentNullException("Original_Course");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_Course));
            }
            if ((Original_YearofStudy == null)) {
                throw new global::System.ArgumentNullException("Original_YearofStudy");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_YearofStudy));
            }
            if ((Original_Contact_No == null)) {
                throw new global::System.ArgumentNullException("Original_Contact_No");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_Contact_No));
            }
            if ((p4 == null)) {
                throw new global::System.ArgumentNullException("p4");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(p4));
            }
            if ((Original_MedicalHistrory == null)) {
                throw new global::System.ArgumentNullException("Original_MedicalHistrory");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_MedicalHistrory));
            }
            if ((Original_Guardian_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Guardian_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_Guardian_Name));
            }
            if ((Original_Guardian_Relationship == null)) {
                throw new global::System.ArgumentNullException("Original_Guardian_Relationship");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_Guardian_Relationship));
            }
            if ((Original_Guardian_Address == null)) {
                throw new global::System.ArgumentNullException("Original_Guardian_Address");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_Guardian_Address));
            }
            if ((Original_Guardian_contactno == null)) {
                throw new global::System.ArgumentNullException("Original_Guardian_contactno");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_Guardian_contactno));
            }
            if ((Original_Police_near == null)) {
                throw new global::System.ArgumentNullException("Original_Police_near");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_Police_near));
            }
            if ((Original_Floor_no == null)) {
                throw new global::System.ArgumentNullException("Original_Floor_no");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_Floor_no));
            }
            this.Adapter.DeleteCommand.Parameters[22].Value = ((int)(Original_Room));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string Student_Reg_no, 
                    string Fullname, 
                    string Surname, 
                    string Address, 
                    string District, 
                    string GS_Division, 
                    string DS_Division, 
                    string Sex, 
                    string NIC_no, 
                    string p1, 
                    string Faculty, 
                    string Course, 
                    string YearofStudy, 
                    string Contact_No, 
                    string p3, 
                    string MedicalHistrory, 
                    string Guardian_Name, 
                    string Guardian_Relationship, 
                    string Guardian_Address, 
                    string Guardian_contactno, 
                    string Police_near, 
                    string Floor_no, 
                    int Room) {
            if ((Student_Reg_no == null)) {
                throw new global::System.ArgumentNullException("Student_Reg_no");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Student_Reg_no));
            }
            if ((Fullname == null)) {
                throw new global::System.ArgumentNullException("Fullname");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Fullname));
            }
            if ((Surname == null)) {
                throw new global::System.ArgumentNullException("Surname");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Surname));
            }
            if ((Address == null)) {
                throw new global::System.ArgumentNullException("Address");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Address));
            }
            if ((District == null)) {
                throw new global::System.ArgumentNullException("District");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(District));
            }
            if ((GS_Division == null)) {
                throw new global::System.ArgumentNullException("GS_Division");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(GS_Division));
            }
            if ((DS_Division == null)) {
                throw new global::System.ArgumentNullException("DS_Division");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(DS_Division));
            }
            if ((Sex == null)) {
                throw new global::System.ArgumentNullException("Sex");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Sex));
            }
            if ((NIC_no == null)) {
                throw new global::System.ArgumentNullException("NIC_no");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(NIC_no));
            }
            if ((p1 == null)) {
                throw new global::System.ArgumentNullException("p1");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(p1));
            }
            if ((Faculty == null)) {
                throw new global::System.ArgumentNullException("Faculty");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Faculty));
            }
            if ((Course == null)) {
                throw new global::System.ArgumentNullException("Course");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Course));
            }
            if ((YearofStudy == null)) {
                throw new global::System.ArgumentNullException("YearofStudy");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(YearofStudy));
            }
            if ((Contact_No == null)) {
                throw new global::System.ArgumentNullException("Contact_No");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(Contact_No));
            }
            if ((p3 == null)) {
                throw new global::System.ArgumentNullException("p3");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(p3));
            }
            if ((MedicalHistrory == null)) {
                throw new global::System.ArgumentNullException("MedicalHistrory");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(MedicalHistrory));
            }
            if ((Guardian_Name == null)) {
                throw new global::System.ArgumentNullException("Guardian_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(Guardian_Name));
            }
            if ((Guardian_Relationship == null)) {
                throw new global::System.ArgumentNullException("Guardian_Relationship");
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(Guardian_Relationship));
            }
            if ((Guardian_Address == null)) {
                throw new global::System.ArgumentNullException("Guardian_Address");
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(Guardian_Address));
            }
            if ((Guardian_contactno == null)) {
                throw new global::System.ArgumentNullException("Guardian_contactno");
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(Guardian_contactno));
            }
            if ((Police_near == null)) {
                throw new global::System.ArgumentNullException("Police_near");
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(Police_near));
            }
            if ((Floor_no == null)) {
                throw new global::System.ArgumentNullException("Floor_no");
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(Floor_no));
            }
            this.Adapter.InsertCommand.Parameters[22].Value = ((int)(Room));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Student_Reg_no, 
                    string Fullname, 
                    string Surname, 
                    string Address, 
                    string District, 
                    string GS_Division, 
                    string DS_Division, 
                    string Sex, 
                    string NIC_no, 
                    string p1, 
                    string Faculty, 
                    string Course, 
                    string YearofStudy, 
                    string Contact_No, 
                    string p3, 
                    string MedicalHistrory, 
                    string Guardian_Name, 
                    string Guardian_Relationship, 
                    string Guardian_Address, 
                    string Guardian_contactno, 
                    string Police_near, 
                    string Floor_no, 
                    int Room, 
                    string Original_Student_Reg_no, 
                    string Original_Fullname, 
                    string Original_Surname, 
                    string Original_Address, 
                    string Original_District, 
                    string Original_GS_Division, 
                    string Original_DS_Division, 
                    string Original_Sex, 
                    string Original_NIC_no, 
                    string p2, 
                    string Original_Faculty, 
                    string Original_Course, 
                    string Original_YearofStudy, 
                    string Original_Contact_No, 
                    string p4, 
                    string Original_MedicalHistrory, 
                    string Original_Guardian_Name, 
                    string Original_Guardian_Relationship, 
                    string Original_Guardian_Address, 
                    string Original_Guardian_contactno, 
                    string Original_Police_near, 
                    string Original_Floor_no, 
                    int Original_Room) {
            if ((Student_Reg_no == null)) {
                throw new global::System.ArgumentNullException("Student_Reg_no");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Student_Reg_no));
            }
            if ((Fullname == null)) {
                throw new global::System.ArgumentNullException("Fullname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Fullname));
            }
            if ((Surname == null)) {
                throw new global::System.ArgumentNullException("Surname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Surname));
            }
            if ((Address == null)) {
                throw new global::System.ArgumentNullException("Address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Address));
            }
            if ((District == null)) {
                throw new global::System.ArgumentNullException("District");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(District));
            }
            if ((GS_Division == null)) {
                throw new global::System.ArgumentNullException("GS_Division");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(GS_Division));
            }
            if ((DS_Division == null)) {
                throw new global::System.ArgumentNullException("DS_Division");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(DS_Division));
            }
            if ((Sex == null)) {
                throw new global::System.ArgumentNullException("Sex");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Sex));
            }
            if ((NIC_no == null)) {
                throw new global::System.ArgumentNullException("NIC_no");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(NIC_no));
            }
            if ((p1 == null)) {
                throw new global::System.ArgumentNullException("p1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(p1));
            }
            if ((Faculty == null)) {
                throw new global::System.ArgumentNullException("Faculty");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Faculty));
            }
            if ((Course == null)) {
                throw new global::System.ArgumentNullException("Course");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Course));
            }
            if ((YearofStudy == null)) {
                throw new global::System.ArgumentNullException("YearofStudy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(YearofStudy));
            }
            if ((Contact_No == null)) {
                throw new global::System.ArgumentNullException("Contact_No");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Contact_No));
            }
            if ((p3 == null)) {
                throw new global::System.ArgumentNullException("p3");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(p3));
            }
            if ((MedicalHistrory == null)) {
                throw new global::System.ArgumentNullException("MedicalHistrory");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(MedicalHistrory));
            }
            if ((Guardian_Name == null)) {
                throw new global::System.ArgumentNullException("Guardian_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Guardian_Name));
            }
            if ((Guardian_Relationship == null)) {
                throw new global::System.ArgumentNullException("Guardian_Relationship");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Guardian_Relationship));
            }
            if ((Guardian_Address == null)) {
                throw new global::System.ArgumentNullException("Guardian_Address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Guardian_Address));
            }
            if ((Guardian_contactno == null)) {
                throw new global::System.ArgumentNullException("Guardian_contactno");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Guardian_contactno));
            }
            if ((Police_near == null)) {
                throw new global::System.ArgumentNullException("Police_near");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Police_near));
            }
            if ((Floor_no == null)) {
                throw new global::System.ArgumentNullException("Floor_no");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Floor_no));
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Room));
            if ((Original_Student_Reg_no == null)) {
                throw new global::System.ArgumentNullException("Original_Student_Reg_no");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_Student_Reg_no));
            }
            if ((Original_Fullname == null)) {
                throw new global::System.ArgumentNullException("Original_Fullname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_Fullname));
            }
            if ((Original_Surname == null)) {
                throw new global::System.ArgumentNullException("Original_Surname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_Surname));
            }
            if ((Original_Address == null)) {
                throw new global::System.ArgumentNullException("Original_Address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_Address));
            }
            if ((Original_District == null)) {
                throw new global::System.ArgumentNullException("Original_District");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_District));
            }
            if ((Original_GS_Division == null)) {
                throw new global::System.ArgumentNullException("Original_GS_Division");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_GS_Division));
            }
            if ((Original_DS_Division == null)) {
                throw new global::System.ArgumentNullException("Original_DS_Division");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_DS_Division));
            }
            if ((Original_Sex == null)) {
                throw new global::System.ArgumentNullException("Original_Sex");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_Sex));
            }
            if ((Original_NIC_no == null)) {
                throw new global::System.ArgumentNullException("Original_NIC_no");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_NIC_no));
            }
            if ((p2 == null)) {
                throw new global::System.ArgumentNullException("p2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(p2));
            }
            if ((Original_Faculty == null)) {
                throw new global::System.ArgumentNullException("Original_Faculty");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_Faculty));
            }
            if ((Original_Course == null)) {
                throw new global::System.ArgumentNullException("Original_Course");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_Course));
            }
            if ((Original_YearofStudy == null)) {
                throw new global::System.ArgumentNullException("Original_YearofStudy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_YearofStudy));
            }
            if ((Original_Contact_No == null)) {
                throw new global::System.ArgumentNullException("Original_Contact_No");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_Contact_No));
            }
            if ((p4 == null)) {
                throw new global::System.ArgumentNullException("p4");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(p4));
            }
            if ((Original_MedicalHistrory == null)) {
                throw new global::System.ArgumentNullException("Original_MedicalHistrory");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_MedicalHistrory));
            }
            if ((Original_Guardian_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Guardian_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Original_Guardian_Name));
            }
            if ((Original_Guardian_Relationship == null)) {
                throw new global::System.ArgumentNullException("Original_Guardian_Relationship");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_Guardian_Relationship));
            }
            if ((Original_Guardian_Address == null)) {
                throw new global::System.ArgumentNullException("Original_Guardian_Address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_Guardian_Address));
            }
            if ((Original_Guardian_contactno == null)) {
                throw new global::System.ArgumentNullException("Original_Guardian_contactno");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_Guardian_contactno));
            }
            if ((Original_Police_near == null)) {
                throw new global::System.ArgumentNullException("Original_Police_near");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_Police_near));
            }
            if ((Original_Floor_no == null)) {
                throw new global::System.ArgumentNullException("Original_Floor_no");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_Floor_no));
            }
            this.Adapter.UpdateCommand.Parameters[45].Value = ((int)(Original_Room));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Fullname, 
                    string Surname, 
                    string Address, 
                    string District, 
                    string GS_Division, 
                    string DS_Division, 
                    string Sex, 
                    string NIC_no, 
                    string p1, 
                    string Faculty, 
                    string Course, 
                    string YearofStudy, 
                    string Contact_No, 
                    string p3, 
                    string MedicalHistrory, 
                    string Guardian_Name, 
                    string Guardian_Relationship, 
                    string Guardian_Address, 
                    string Guardian_contactno, 
                    string Police_near, 
                    string Floor_no, 
                    int Room, 
                    string Original_Student_Reg_no, 
                    string Original_Fullname, 
                    string Original_Surname, 
                    string Original_Address, 
                    string Original_District, 
                    string Original_GS_Division, 
                    string Original_DS_Division, 
                    string Original_Sex, 
                    string Original_NIC_no, 
                    string p2, 
                    string Original_Faculty, 
                    string Original_Course, 
                    string Original_YearofStudy, 
                    string Original_Contact_No, 
                    string p4, 
                    string Original_MedicalHistrory, 
                    string Original_Guardian_Name, 
                    string Original_Guardian_Relationship, 
                    string Original_Guardian_Address, 
                    string Original_Guardian_contactno, 
                    string Original_Police_near, 
                    string Original_Floor_no, 
                    int Original_Room) {
            return this.Update(Original_Student_Reg_no, Fullname, Surname, Address, District, GS_Division, DS_Division, Sex, NIC_no, p1, Faculty, Course, YearofStudy, Contact_No, p3, MedicalHistrory, Guardian_Name, Guardian_Relationship, Guardian_Address, Guardian_contactno, Police_near, Floor_no, Room, Original_Student_Reg_no, Original_Fullname, Original_Surname, Original_Address, Original_District, Original_GS_Division, Original_DS_Division, Original_Sex, Original_NIC_no, p2, Original_Faculty, Original_Course, Original_YearofStudy, Original_Contact_No, p4, Original_MedicalHistrory, Original_Guardian_Name, Original_Guardian_Relationship, Original_Guardian_Address, Original_Guardian_contactno, Original_Police_near, Original_Floor_no, Original_Room);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class StuDetailsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public StuDetailsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "StuDetails";
            tableMapping.ColumnMappings.Add("Regno", "Regno");
            tableMapping.ColumnMappings.Add("Fullname", "Fullname");
            tableMapping.ColumnMappings.Add("Surname", "Surname");
            tableMapping.ColumnMappings.Add("Address", "Address");
            tableMapping.ColumnMappings.Add("District", "District");
            tableMapping.ColumnMappings.Add("GSDivision", "GSDivision");
            tableMapping.ColumnMappings.Add("DSDivision", "DSDivision");
            tableMapping.ColumnMappings.Add("Sex", "Sex");
            tableMapping.ColumnMappings.Add("NICno", "NICno");
            tableMapping.ColumnMappings.Add("DateOfBirth", "DateOfBirth");
            tableMapping.ColumnMappings.Add("Faculty", "Faculty");
            tableMapping.ColumnMappings.Add("Course", "Course");
            tableMapping.ColumnMappings.Add("YearofStudy", "YearofStudy");
            tableMapping.ColumnMappings.Add("ContactNo", "ContactNo");
            tableMapping.ColumnMappings.Add("EmailID", "EmailID");
            tableMapping.ColumnMappings.Add("MedicalHistrory", "MedicalHistrory");
            tableMapping.ColumnMappings.Add("GuardianName", "GuardianName");
            tableMapping.ColumnMappings.Add("GuardianRelationship", "GuardianRelationship");
            tableMapping.ColumnMappings.Add("GuardianAddress", "GuardianAddress");
            tableMapping.ColumnMappings.Add("Guardiancontactno", "Guardiancontactno");
            tableMapping.ColumnMappings.Add("Policenear", "Policenear");
            tableMapping.ColumnMappings.Add("Floorno", "Floorno");
            tableMapping.ColumnMappings.Add("Room", "Room");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[StuDetails] WHERE (([Regno] = @Original_Regno) AND ([Fullname] = @Original_Fullname) AND ([Surname] = @Original_Surname) AND ([Address] = @Original_Address) AND ([District] = @Original_District) AND ([GSDivision] = @Original_GSDivision) AND ([DSDivision] = @Original_DSDivision) AND ([Sex] = @Original_Sex) AND ([NICno] = @Original_NICno) AND ([DateOfBirth] = @Original_DateOfBirth) AND ([Faculty] = @Original_Faculty) AND ([Course] = @Original_Course) AND ([YearofStudy] = @Original_YearofStudy) AND ([ContactNo] = @Original_ContactNo) AND ([EmailID] = @Original_EmailID) AND ([MedicalHistrory] = @Original_MedicalHistrory) AND ([GuardianName] = @Original_GuardianName) AND ([GuardianRelationship] = @Original_GuardianRelationship) AND ([GuardianAddress] = @Original_GuardianAddress) AND ([Guardiancontactno] = @Original_Guardiancontactno) AND ([Policenear] = @Original_Policenear) AND ([Floorno] = @Original_Floorno) AND ([Room] = @Original_Room))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Regno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regno", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fullname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fullname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Surname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Surname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_District", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "District", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GSDivision", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GSDivision", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DSDivision", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DSDivision", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sex", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sex", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NICno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NICno", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateOfBirth", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateOfBirth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Faculty", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Faculty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Course", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Course", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YearofStudy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YearofStudy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContactNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContactNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmailID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmailID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MedicalHistrory", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MedicalHistrory", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GuardianName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuardianName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GuardianRelationship", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuardianRelationship", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GuardianAddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuardianAddress", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Guardiancontactno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardiancontactno", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Policenear", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Policenear", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Floorno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Floorno", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Room", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[StuDetails] ([Regno], [Fullname], [Surname], [Address], [District], [GSDivision], [DSDivision], [Sex], [NICno], [DateOfBirth], [Faculty], [Course], [YearofStudy], [ContactNo], [EmailID], [MedicalHistrory], [GuardianName], [GuardianRelationship], [GuardianAddress], [Guardiancontactno], [Policenear], [Floorno], [Room]) VALUES (@Regno, @Fullname, @Surname, @Address, @District, @GSDivision, @DSDivision, @Sex, @NICno, @DateOfBirth, @Faculty, @Course, @YearofStudy, @ContactNo, @EmailID, @MedicalHistrory, @GuardianName, @GuardianRelationship, @GuardianAddress, @Guardiancontactno, @Policenear, @Floorno, @Room);
SELECT Regno, Fullname, Surname, Address, District, GSDivision, DSDivision, Sex, NICno, DateOfBirth, Faculty, Course, YearofStudy, ContactNo, EmailID, MedicalHistrory, GuardianName, GuardianRelationship, GuardianAddress, Guardiancontactno, Policenear, Floorno, Room FROM StuDetails WHERE (Regno = @Regno)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regno", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fullname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fullname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Surname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Surname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@District", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "District", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GSDivision", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GSDivision", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DSDivision", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DSDivision", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sex", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NICno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NICno", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateOfBirth", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateOfBirth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Faculty", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Faculty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Course", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Course", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YearofStudy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YearofStudy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContactNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContactNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmailID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmailID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MedicalHistrory", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MedicalHistrory", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GuardianName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuardianName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GuardianRelationship", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuardianRelationship", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GuardianAddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuardianAddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Guardiancontactno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardiancontactno", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Policenear", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Policenear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Floorno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Floorno", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Room", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[StuDetails] SET [Regno] = @Regno, [Fullname] = @Fullname, [Surname]" +
                " = @Surname, [Address] = @Address, [District] = @District, [GSDivision] = @GSDiv" +
                "ision, [DSDivision] = @DSDivision, [Sex] = @Sex, [NICno] = @NICno, [DateOfBirth]" +
                " = @DateOfBirth, [Faculty] = @Faculty, [Course] = @Course, [YearofStudy] = @Year" +
                "ofStudy, [ContactNo] = @ContactNo, [EmailID] = @EmailID, [MedicalHistrory] = @Me" +
                "dicalHistrory, [GuardianName] = @GuardianName, [GuardianRelationship] = @Guardia" +
                "nRelationship, [GuardianAddress] = @GuardianAddress, [Guardiancontactno] = @Guar" +
                "diancontactno, [Policenear] = @Policenear, [Floorno] = @Floorno, [Room] = @Room " +
                "WHERE (([Regno] = @Original_Regno) AND ([Fullname] = @Original_Fullname) AND ([S" +
                "urname] = @Original_Surname) AND ([Address] = @Original_Address) AND ([District]" +
                " = @Original_District) AND ([GSDivision] = @Original_GSDivision) AND ([DSDivisio" +
                "n] = @Original_DSDivision) AND ([Sex] = @Original_Sex) AND ([NICno] = @Original_" +
                "NICno) AND ([DateOfBirth] = @Original_DateOfBirth) AND ([Faculty] = @Original_Fa" +
                "culty) AND ([Course] = @Original_Course) AND ([YearofStudy] = @Original_YearofSt" +
                "udy) AND ([ContactNo] = @Original_ContactNo) AND ([EmailID] = @Original_EmailID)" +
                " AND ([MedicalHistrory] = @Original_MedicalHistrory) AND ([GuardianName] = @Orig" +
                "inal_GuardianName) AND ([GuardianRelationship] = @Original_GuardianRelationship)" +
                " AND ([GuardianAddress] = @Original_GuardianAddress) AND ([Guardiancontactno] = " +
                "@Original_Guardiancontactno) AND ([Policenear] = @Original_Policenear) AND ([Flo" +
                "orno] = @Original_Floorno) AND ([Room] = @Original_Room));\r\nSELECT Regno, Fullna" +
                "me, Surname, Address, District, GSDivision, DSDivision, Sex, NICno, DateOfBirth," +
                " Faculty, Course, YearofStudy, ContactNo, EmailID, MedicalHistrory, GuardianName" +
                ", GuardianRelationship, GuardianAddress, Guardiancontactno, Policenear, Floorno," +
                " Room FROM StuDetails WHERE (Regno = @Regno)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regno", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fullname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fullname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Surname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Surname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@District", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "District", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GSDivision", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GSDivision", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DSDivision", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DSDivision", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sex", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NICno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NICno", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateOfBirth", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateOfBirth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Faculty", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Faculty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Course", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Course", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YearofStudy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YearofStudy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContactNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContactNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmailID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmailID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MedicalHistrory", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MedicalHistrory", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GuardianName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuardianName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GuardianRelationship", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuardianRelationship", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GuardianAddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuardianAddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Guardiancontactno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardiancontactno", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Policenear", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Policenear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Floorno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Floorno", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Room", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Regno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regno", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fullname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fullname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Surname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Surname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_District", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "District", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GSDivision", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GSDivision", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DSDivision", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DSDivision", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sex", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sex", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NICno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NICno", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateOfBirth", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateOfBirth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Faculty", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Faculty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Course", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Course", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YearofStudy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YearofStudy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContactNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContactNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmailID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmailID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MedicalHistrory", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MedicalHistrory", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GuardianName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuardianName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GuardianRelationship", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuardianRelationship", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GuardianAddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GuardianAddress", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Guardiancontactno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardiancontactno", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Policenear", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Policenear", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Floorno", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Floorno", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Room", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::hostelloginpage.Properties.Settings.Default.HostelDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Regno, Fullname, Surname, Address, District, GSDivision, DSDivision, Sex, NICno, DateOfBirth, Faculty, Course, YearofStudy, ContactNo, EmailID, MedicalHistrory, GuardianName, GuardianRelationship, GuardianAddress, Guardiancontactno, Policenear, Floorno, Room FROM dbo.StuDetails";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(HostelDBDataSet2.StuDetailsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual HostelDBDataSet2.StuDetailsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            HostelDBDataSet2.StuDetailsDataTable dataTable = new HostelDBDataSet2.StuDetailsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(HostelDBDataSet2.StuDetailsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(HostelDBDataSet2 dataSet) {
            return this.Adapter.Update(dataSet, "StuDetails");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_Regno, 
                    string Original_Fullname, 
                    string Original_Surname, 
                    string Original_Address, 
                    string Original_District, 
                    string Original_GSDivision, 
                    string Original_DSDivision, 
                    string Original_Sex, 
                    string Original_NICno, 
                    string Original_DateOfBirth, 
                    string Original_Faculty, 
                    string Original_Course, 
                    string Original_YearofStudy, 
                    string Original_ContactNo, 
                    string Original_EmailID, 
                    string Original_MedicalHistrory, 
                    string Original_GuardianName, 
                    string Original_GuardianRelationship, 
                    string Original_GuardianAddress, 
                    string Original_Guardiancontactno, 
                    string Original_Policenear, 
                    string Original_Floorno, 
                    int Original_Room) {
            if ((Original_Regno == null)) {
                throw new global::System.ArgumentNullException("Original_Regno");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_Regno));
            }
            if ((Original_Fullname == null)) {
                throw new global::System.ArgumentNullException("Original_Fullname");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Fullname));
            }
            if ((Original_Surname == null)) {
                throw new global::System.ArgumentNullException("Original_Surname");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Surname));
            }
            if ((Original_Address == null)) {
                throw new global::System.ArgumentNullException("Original_Address");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Address));
            }
            if ((Original_District == null)) {
                throw new global::System.ArgumentNullException("Original_District");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_District));
            }
            if ((Original_GSDivision == null)) {
                throw new global::System.ArgumentNullException("Original_GSDivision");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_GSDivision));
            }
            if ((Original_DSDivision == null)) {
                throw new global::System.ArgumentNullException("Original_DSDivision");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_DSDivision));
            }
            if ((Original_Sex == null)) {
                throw new global::System.ArgumentNullException("Original_Sex");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Sex));
            }
            if ((Original_NICno == null)) {
                throw new global::System.ArgumentNullException("Original_NICno");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_NICno));
            }
            if ((Original_DateOfBirth == null)) {
                throw new global::System.ArgumentNullException("Original_DateOfBirth");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_DateOfBirth));
            }
            if ((Original_Faculty == null)) {
                throw new global::System.ArgumentNullException("Original_Faculty");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Faculty));
            }
            if ((Original_Course == null)) {
                throw new global::System.ArgumentNullException("Original_Course");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_Course));
            }
            if ((Original_YearofStudy == null)) {
                throw new global::System.ArgumentNullException("Original_YearofStudy");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_YearofStudy));
            }
            if ((Original_ContactNo == null)) {
                throw new global::System.ArgumentNullException("Original_ContactNo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_ContactNo));
            }
            if ((Original_EmailID == null)) {
                throw new global::System.ArgumentNullException("Original_EmailID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_EmailID));
            }
            if ((Original_MedicalHistrory == null)) {
                throw new global::System.ArgumentNullException("Original_MedicalHistrory");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_MedicalHistrory));
            }
            if ((Original_GuardianName == null)) {
                throw new global::System.ArgumentNullException("Original_GuardianName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_GuardianName));
            }
            if ((Original_GuardianRelationship == null)) {
                throw new global::System.ArgumentNullException("Original_GuardianRelationship");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_GuardianRelationship));
            }
            if ((Original_GuardianAddress == null)) {
                throw new global::System.ArgumentNullException("Original_GuardianAddress");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_GuardianAddress));
            }
            if ((Original_Guardiancontactno == null)) {
                throw new global::System.ArgumentNullException("Original_Guardiancontactno");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_Guardiancontactno));
            }
            if ((Original_Policenear == null)) {
                throw new global::System.ArgumentNullException("Original_Policenear");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_Policenear));
            }
            if ((Original_Floorno == null)) {
                throw new global::System.ArgumentNullException("Original_Floorno");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_Floorno));
            }
            this.Adapter.DeleteCommand.Parameters[22].Value = ((int)(Original_Room));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string Regno, 
                    string Fullname, 
                    string Surname, 
                    string Address, 
                    string District, 
                    string GSDivision, 
                    string DSDivision, 
                    string Sex, 
                    string NICno, 
                    string DateOfBirth, 
                    string Faculty, 
                    string Course, 
                    string YearofStudy, 
                    string ContactNo, 
                    string EmailID, 
                    string MedicalHistrory, 
                    string GuardianName, 
                    string GuardianRelationship, 
                    string GuardianAddress, 
                    string Guardiancontactno, 
                    string Policenear, 
                    string Floorno, 
                    int Room) {
            if ((Regno == null)) {
                throw new global::System.ArgumentNullException("Regno");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Regno));
            }
            if ((Fullname == null)) {
                throw new global::System.ArgumentNullException("Fullname");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Fullname));
            }
            if ((Surname == null)) {
                throw new global::System.ArgumentNullException("Surname");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Surname));
            }
            if ((Address == null)) {
                throw new global::System.ArgumentNullException("Address");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Address));
            }
            if ((District == null)) {
                throw new global::System.ArgumentNullException("District");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(District));
            }
            if ((GSDivision == null)) {
                throw new global::System.ArgumentNullException("GSDivision");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(GSDivision));
            }
            if ((DSDivision == null)) {
                throw new global::System.ArgumentNullException("DSDivision");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(DSDivision));
            }
            if ((Sex == null)) {
                throw new global::System.ArgumentNullException("Sex");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Sex));
            }
            if ((NICno == null)) {
                throw new global::System.ArgumentNullException("NICno");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(NICno));
            }
            if ((DateOfBirth == null)) {
                throw new global::System.ArgumentNullException("DateOfBirth");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(DateOfBirth));
            }
            if ((Faculty == null)) {
                throw new global::System.ArgumentNullException("Faculty");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Faculty));
            }
            if ((Course == null)) {
                throw new global::System.ArgumentNullException("Course");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Course));
            }
            if ((YearofStudy == null)) {
                throw new global::System.ArgumentNullException("YearofStudy");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(YearofStudy));
            }
            if ((ContactNo == null)) {
                throw new global::System.ArgumentNullException("ContactNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(ContactNo));
            }
            if ((EmailID == null)) {
                throw new global::System.ArgumentNullException("EmailID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(EmailID));
            }
            if ((MedicalHistrory == null)) {
                throw new global::System.ArgumentNullException("MedicalHistrory");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(MedicalHistrory));
            }
            if ((GuardianName == null)) {
                throw new global::System.ArgumentNullException("GuardianName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(GuardianName));
            }
            if ((GuardianRelationship == null)) {
                throw new global::System.ArgumentNullException("GuardianRelationship");
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(GuardianRelationship));
            }
            if ((GuardianAddress == null)) {
                throw new global::System.ArgumentNullException("GuardianAddress");
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(GuardianAddress));
            }
            if ((Guardiancontactno == null)) {
                throw new global::System.ArgumentNullException("Guardiancontactno");
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(Guardiancontactno));
            }
            if ((Policenear == null)) {
                throw new global::System.ArgumentNullException("Policenear");
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(Policenear));
            }
            if ((Floorno == null)) {
                throw new global::System.ArgumentNullException("Floorno");
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(Floorno));
            }
            this.Adapter.InsertCommand.Parameters[22].Value = ((int)(Room));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Regno, 
                    string Fullname, 
                    string Surname, 
                    string Address, 
                    string District, 
                    string GSDivision, 
                    string DSDivision, 
                    string Sex, 
                    string NICno, 
                    string DateOfBirth, 
                    string Faculty, 
                    string Course, 
                    string YearofStudy, 
                    string ContactNo, 
                    string EmailID, 
                    string MedicalHistrory, 
                    string GuardianName, 
                    string GuardianRelationship, 
                    string GuardianAddress, 
                    string Guardiancontactno, 
                    string Policenear, 
                    string Floorno, 
                    int Room, 
                    string Original_Regno, 
                    string Original_Fullname, 
                    string Original_Surname, 
                    string Original_Address, 
                    string Original_District, 
                    string Original_GSDivision, 
                    string Original_DSDivision, 
                    string Original_Sex, 
                    string Original_NICno, 
                    string Original_DateOfBirth, 
                    string Original_Faculty, 
                    string Original_Course, 
                    string Original_YearofStudy, 
                    string Original_ContactNo, 
                    string Original_EmailID, 
                    string Original_MedicalHistrory, 
                    string Original_GuardianName, 
                    string Original_GuardianRelationship, 
                    string Original_GuardianAddress, 
                    string Original_Guardiancontactno, 
                    string Original_Policenear, 
                    string Original_Floorno, 
                    int Original_Room) {
            if ((Regno == null)) {
                throw new global::System.ArgumentNullException("Regno");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Regno));
            }
            if ((Fullname == null)) {
                throw new global::System.ArgumentNullException("Fullname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Fullname));
            }
            if ((Surname == null)) {
                throw new global::System.ArgumentNullException("Surname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Surname));
            }
            if ((Address == null)) {
                throw new global::System.ArgumentNullException("Address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Address));
            }
            if ((District == null)) {
                throw new global::System.ArgumentNullException("District");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(District));
            }
            if ((GSDivision == null)) {
                throw new global::System.ArgumentNullException("GSDivision");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(GSDivision));
            }
            if ((DSDivision == null)) {
                throw new global::System.ArgumentNullException("DSDivision");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(DSDivision));
            }
            if ((Sex == null)) {
                throw new global::System.ArgumentNullException("Sex");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Sex));
            }
            if ((NICno == null)) {
                throw new global::System.ArgumentNullException("NICno");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(NICno));
            }
            if ((DateOfBirth == null)) {
                throw new global::System.ArgumentNullException("DateOfBirth");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(DateOfBirth));
            }
            if ((Faculty == null)) {
                throw new global::System.ArgumentNullException("Faculty");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Faculty));
            }
            if ((Course == null)) {
                throw new global::System.ArgumentNullException("Course");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Course));
            }
            if ((YearofStudy == null)) {
                throw new global::System.ArgumentNullException("YearofStudy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(YearofStudy));
            }
            if ((ContactNo == null)) {
                throw new global::System.ArgumentNullException("ContactNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(ContactNo));
            }
            if ((EmailID == null)) {
                throw new global::System.ArgumentNullException("EmailID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(EmailID));
            }
            if ((MedicalHistrory == null)) {
                throw new global::System.ArgumentNullException("MedicalHistrory");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(MedicalHistrory));
            }
            if ((GuardianName == null)) {
                throw new global::System.ArgumentNullException("GuardianName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(GuardianName));
            }
            if ((GuardianRelationship == null)) {
                throw new global::System.ArgumentNullException("GuardianRelationship");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(GuardianRelationship));
            }
            if ((GuardianAddress == null)) {
                throw new global::System.ArgumentNullException("GuardianAddress");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(GuardianAddress));
            }
            if ((Guardiancontactno == null)) {
                throw new global::System.ArgumentNullException("Guardiancontactno");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Guardiancontactno));
            }
            if ((Policenear == null)) {
                throw new global::System.ArgumentNullException("Policenear");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Policenear));
            }
            if ((Floorno == null)) {
                throw new global::System.ArgumentNullException("Floorno");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Floorno));
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Room));
            if ((Original_Regno == null)) {
                throw new global::System.ArgumentNullException("Original_Regno");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_Regno));
            }
            if ((Original_Fullname == null)) {
                throw new global::System.ArgumentNullException("Original_Fullname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_Fullname));
            }
            if ((Original_Surname == null)) {
                throw new global::System.ArgumentNullException("Original_Surname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_Surname));
            }
            if ((Original_Address == null)) {
                throw new global::System.ArgumentNullException("Original_Address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_Address));
            }
            if ((Original_District == null)) {
                throw new global::System.ArgumentNullException("Original_District");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_District));
            }
            if ((Original_GSDivision == null)) {
                throw new global::System.ArgumentNullException("Original_GSDivision");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_GSDivision));
            }
            if ((Original_DSDivision == null)) {
                throw new global::System.ArgumentNullException("Original_DSDivision");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_DSDivision));
            }
            if ((Original_Sex == null)) {
                throw new global::System.ArgumentNullException("Original_Sex");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_Sex));
            }
            if ((Original_NICno == null)) {
                throw new global::System.ArgumentNullException("Original_NICno");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_NICno));
            }
            if ((Original_DateOfBirth == null)) {
                throw new global::System.ArgumentNullException("Original_DateOfBirth");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_DateOfBirth));
            }
            if ((Original_Faculty == null)) {
                throw new global::System.ArgumentNullException("Original_Faculty");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_Faculty));
            }
            if ((Original_Course == null)) {
                throw new global::System.ArgumentNullException("Original_Course");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_Course));
            }
            if ((Original_YearofStudy == null)) {
                throw new global::System.ArgumentNullException("Original_YearofStudy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_YearofStudy));
            }
            if ((Original_ContactNo == null)) {
                throw new global::System.ArgumentNullException("Original_ContactNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_ContactNo));
            }
            if ((Original_EmailID == null)) {
                throw new global::System.ArgumentNullException("Original_EmailID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_EmailID));
            }
            if ((Original_MedicalHistrory == null)) {
                throw new global::System.ArgumentNullException("Original_MedicalHistrory");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_MedicalHistrory));
            }
            if ((Original_GuardianName == null)) {
                throw new global::System.ArgumentNullException("Original_GuardianName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Original_GuardianName));
            }
            if ((Original_GuardianRelationship == null)) {
                throw new global::System.ArgumentNullException("Original_GuardianRelationship");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_GuardianRelationship));
            }
            if ((Original_GuardianAddress == null)) {
                throw new global::System.ArgumentNullException("Original_GuardianAddress");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_GuardianAddress));
            }
            if ((Original_Guardiancontactno == null)) {
                throw new global::System.ArgumentNullException("Original_Guardiancontactno");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_Guardiancontactno));
            }
            if ((Original_Policenear == null)) {
                throw new global::System.ArgumentNullException("Original_Policenear");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_Policenear));
            }
            if ((Original_Floorno == null)) {
                throw new global::System.ArgumentNullException("Original_Floorno");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_Floorno));
            }
            this.Adapter.UpdateCommand.Parameters[45].Value = ((int)(Original_Room));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Fullname, 
                    string Surname, 
                    string Address, 
                    string District, 
                    string GSDivision, 
                    string DSDivision, 
                    string Sex, 
                    string NICno, 
                    string DateOfBirth, 
                    string Faculty, 
                    string Course, 
                    string YearofStudy, 
                    string ContactNo, 
                    string EmailID, 
                    string MedicalHistrory, 
                    string GuardianName, 
                    string GuardianRelationship, 
                    string GuardianAddress, 
                    string Guardiancontactno, 
                    string Policenear, 
                    string Floorno, 
                    int Room, 
                    string Original_Regno, 
                    string Original_Fullname, 
                    string Original_Surname, 
                    string Original_Address, 
                    string Original_District, 
                    string Original_GSDivision, 
                    string Original_DSDivision, 
                    string Original_Sex, 
                    string Original_NICno, 
                    string Original_DateOfBirth, 
                    string Original_Faculty, 
                    string Original_Course, 
                    string Original_YearofStudy, 
                    string Original_ContactNo, 
                    string Original_EmailID, 
                    string Original_MedicalHistrory, 
                    string Original_GuardianName, 
                    string Original_GuardianRelationship, 
                    string Original_GuardianAddress, 
                    string Original_Guardiancontactno, 
                    string Original_Policenear, 
                    string Original_Floorno, 
                    int Original_Room) {
            return this.Update(Original_Regno, Fullname, Surname, Address, District, GSDivision, DSDivision, Sex, NICno, DateOfBirth, Faculty, Course, YearofStudy, ContactNo, EmailID, MedicalHistrory, GuardianName, GuardianRelationship, GuardianAddress, Guardiancontactno, Policenear, Floorno, Room, Original_Regno, Original_Fullname, Original_Surname, Original_Address, Original_District, Original_GSDivision, Original_DSDivision, Original_Sex, Original_NICno, Original_DateOfBirth, Original_Faculty, Original_Course, Original_YearofStudy, Original_ContactNo, Original_EmailID, Original_MedicalHistrory, Original_GuardianName, Original_GuardianRelationship, Original_GuardianAddress, Original_Guardiancontactno, Original_Policenear, Original_Floorno, Original_Room);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class UserRegisterTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UserRegisterTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "UserRegister";
            tableMapping.ColumnMappings.Add("UserId", "UserId");
            tableMapping.ColumnMappings.Add("Institude_name", "Institude_name");
            tableMapping.ColumnMappings.Add("Email", "Email");
            tableMapping.ColumnMappings.Add("Contact", "Contact");
            tableMapping.ColumnMappings.Add("Creater_name", "Creater_name");
            tableMapping.ColumnMappings.Add("User_name", "User_name");
            tableMapping.ColumnMappings.Add("Password", "Password");
            tableMapping.ColumnMappings.Add("ConPassword", "ConPassword");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[UserRegister] WHERE (([UserId] = @Original_UserId) AND ([Institude_name] = @Original_Institude_name) AND ([Email] = @Original_Email) AND ([Contact] = @Original_Contact) AND ([Creater_name] = @Original_Creater_name) AND ([User_name] = @Original_User_name) AND ([Password] = @Original_Password) AND ([ConPassword] = @Original_ConPassword))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Institude_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Institude_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Contact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contact", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Creater_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Creater_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_User_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "User_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Password", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Password", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConPassword", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConPassword", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[UserRegister] ([Institude_name], [Email], [Contact], [Creater_name], [User_name], [Password], [ConPassword]) VALUES (@Institude_name, @Email, @Contact, @Creater_name, @User_name, @Password, @ConPassword);
SELECT UserId, Institude_name, Email, Contact, Creater_name, User_name, Password, ConPassword FROM UserRegister WHERE (UserId = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Institude_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Institude_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Contact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contact", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Creater_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Creater_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@User_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "User_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Password", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Password", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConPassword", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConPassword", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[UserRegister] SET [Institude_name] = @Institude_name, [Email] = @Email, [Contact] = @Contact, [Creater_name] = @Creater_name, [User_name] = @User_name, [Password] = @Password, [ConPassword] = @ConPassword WHERE (([UserId] = @Original_UserId) AND ([Institude_name] = @Original_Institude_name) AND ([Email] = @Original_Email) AND ([Contact] = @Original_Contact) AND ([Creater_name] = @Original_Creater_name) AND ([User_name] = @Original_User_name) AND ([Password] = @Original_Password) AND ([ConPassword] = @Original_ConPassword));
SELECT UserId, Institude_name, Email, Contact, Creater_name, User_name, Password, ConPassword FROM UserRegister WHERE (UserId = @UserId)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Institude_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Institude_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Contact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contact", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Creater_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Creater_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@User_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "User_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Password", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Password", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConPassword", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConPassword", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Institude_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Institude_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Contact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contact", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Creater_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Creater_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_User_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "User_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Password", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Password", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConPassword", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConPassword", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "UserId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::hostelloginpage.Properties.Settings.Default.HostelDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT UserId, Institude_name, Email, Contact, Creater_name, User_name, Password," +
                " ConPassword FROM dbo.UserRegister";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(HostelDBDataSet2.UserRegisterDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual HostelDBDataSet2.UserRegisterDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            HostelDBDataSet2.UserRegisterDataTable dataTable = new HostelDBDataSet2.UserRegisterDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(HostelDBDataSet2.UserRegisterDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(HostelDBDataSet2 dataSet) {
            return this.Adapter.Update(dataSet, "UserRegister");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_UserId, string Original_Institude_name, string Original_Email, string Original_Contact, string Original_Creater_name, string Original_User_name, string Original_Password, string Original_ConPassword) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_UserId));
            if ((Original_Institude_name == null)) {
                throw new global::System.ArgumentNullException("Original_Institude_name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Institude_name));
            }
            if ((Original_Email == null)) {
                throw new global::System.ArgumentNullException("Original_Email");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Email));
            }
            if ((Original_Contact == null)) {
                throw new global::System.ArgumentNullException("Original_Contact");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Contact));
            }
            if ((Original_Creater_name == null)) {
                throw new global::System.ArgumentNullException("Original_Creater_name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Creater_name));
            }
            if ((Original_User_name == null)) {
                throw new global::System.ArgumentNullException("Original_User_name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_User_name));
            }
            if ((Original_Password == null)) {
                throw new global::System.ArgumentNullException("Original_Password");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Password));
            }
            if ((Original_ConPassword == null)) {
                throw new global::System.ArgumentNullException("Original_ConPassword");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_ConPassword));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Institude_name, string Email, string Contact, string Creater_name, string User_name, string Password, string ConPassword) {
            if ((Institude_name == null)) {
                throw new global::System.ArgumentNullException("Institude_name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Institude_name));
            }
            if ((Email == null)) {
                throw new global::System.ArgumentNullException("Email");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Email));
            }
            if ((Contact == null)) {
                throw new global::System.ArgumentNullException("Contact");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Contact));
            }
            if ((Creater_name == null)) {
                throw new global::System.ArgumentNullException("Creater_name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Creater_name));
            }
            if ((User_name == null)) {
                throw new global::System.ArgumentNullException("User_name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(User_name));
            }
            if ((Password == null)) {
                throw new global::System.ArgumentNullException("Password");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Password));
            }
            if ((ConPassword == null)) {
                throw new global::System.ArgumentNullException("ConPassword");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(ConPassword));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Institude_name, 
                    string Email, 
                    string Contact, 
                    string Creater_name, 
                    string User_name, 
                    string Password, 
                    string ConPassword, 
                    int Original_UserId, 
                    string Original_Institude_name, 
                    string Original_Email, 
                    string Original_Contact, 
                    string Original_Creater_name, 
                    string Original_User_name, 
                    string Original_Password, 
                    string Original_ConPassword, 
                    int UserId) {
            if ((Institude_name == null)) {
                throw new global::System.ArgumentNullException("Institude_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Institude_name));
            }
            if ((Email == null)) {
                throw new global::System.ArgumentNullException("Email");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Email));
            }
            if ((Contact == null)) {
                throw new global::System.ArgumentNullException("Contact");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Contact));
            }
            if ((Creater_name == null)) {
                throw new global::System.ArgumentNullException("Creater_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Creater_name));
            }
            if ((User_name == null)) {
                throw new global::System.ArgumentNullException("User_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(User_name));
            }
            if ((Password == null)) {
                throw new global::System.ArgumentNullException("Password");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Password));
            }
            if ((ConPassword == null)) {
                throw new global::System.ArgumentNullException("ConPassword");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(ConPassword));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_UserId));
            if ((Original_Institude_name == null)) {
                throw new global::System.ArgumentNullException("Original_Institude_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Institude_name));
            }
            if ((Original_Email == null)) {
                throw new global::System.ArgumentNullException("Original_Email");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_Email));
            }
            if ((Original_Contact == null)) {
                throw new global::System.ArgumentNullException("Original_Contact");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_Contact));
            }
            if ((Original_Creater_name == null)) {
                throw new global::System.ArgumentNullException("Original_Creater_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Creater_name));
            }
            if ((Original_User_name == null)) {
                throw new global::System.ArgumentNullException("Original_User_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_User_name));
            }
            if ((Original_Password == null)) {
                throw new global::System.ArgumentNullException("Original_Password");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_Password));
            }
            if ((Original_ConPassword == null)) {
                throw new global::System.ArgumentNullException("Original_ConPassword");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_ConPassword));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(UserId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Institude_name, string Email, string Contact, string Creater_name, string User_name, string Password, string ConPassword, int Original_UserId, string Original_Institude_name, string Original_Email, string Original_Contact, string Original_Creater_name, string Original_User_name, string Original_Password, string Original_ConPassword) {
            return this.Update(Institude_name, Email, Contact, Creater_name, User_name, Password, ConPassword, Original_UserId, Original_Institude_name, Original_Email, Original_Contact, Original_Creater_name, Original_User_name, Original_Password, Original_ConPassword, Original_UserId);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private AssertTableAdapter _assertTableAdapter;
        
        private AssetsTableAdapter _assetsTableAdapter;
        
        private StaffDetailsTableAdapter _staffDetailsTableAdapter;
        
        private StudentTableAdapter _studentTableAdapter;
        
        private StudentDetailTableAdapter _studentDetailTableAdapter;
        
        private StuDetailsTableAdapter _stuDetailsTableAdapter;
        
        private UserRegisterTableAdapter _userRegisterTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public AssertTableAdapter AssertTableAdapter {
            get {
                return this._assertTableAdapter;
            }
            set {
                this._assertTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public AssetsTableAdapter AssetsTableAdapter {
            get {
                return this._assetsTableAdapter;
            }
            set {
                this._assetsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public StaffDetailsTableAdapter StaffDetailsTableAdapter {
            get {
                return this._staffDetailsTableAdapter;
            }
            set {
                this._staffDetailsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public StudentTableAdapter StudentTableAdapter {
            get {
                return this._studentTableAdapter;
            }
            set {
                this._studentTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public StudentDetailTableAdapter StudentDetailTableAdapter {
            get {
                return this._studentDetailTableAdapter;
            }
            set {
                this._studentDetailTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public StuDetailsTableAdapter StuDetailsTableAdapter {
            get {
                return this._stuDetailsTableAdapter;
            }
            set {
                this._stuDetailsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public UserRegisterTableAdapter UserRegisterTableAdapter {
            get {
                return this._userRegisterTableAdapter;
            }
            set {
                this._userRegisterTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._assertTableAdapter != null) 
                            && (this._assertTableAdapter.Connection != null))) {
                    return this._assertTableAdapter.Connection;
                }
                if (((this._assetsTableAdapter != null) 
                            && (this._assetsTableAdapter.Connection != null))) {
                    return this._assetsTableAdapter.Connection;
                }
                if (((this._staffDetailsTableAdapter != null) 
                            && (this._staffDetailsTableAdapter.Connection != null))) {
                    return this._staffDetailsTableAdapter.Connection;
                }
                if (((this._studentTableAdapter != null) 
                            && (this._studentTableAdapter.Connection != null))) {
                    return this._studentTableAdapter.Connection;
                }
                if (((this._studentDetailTableAdapter != null) 
                            && (this._studentDetailTableAdapter.Connection != null))) {
                    return this._studentDetailTableAdapter.Connection;
                }
                if (((this._stuDetailsTableAdapter != null) 
                            && (this._stuDetailsTableAdapter.Connection != null))) {
                    return this._stuDetailsTableAdapter.Connection;
                }
                if (((this._userRegisterTableAdapter != null) 
                            && (this._userRegisterTableAdapter.Connection != null))) {
                    return this._userRegisterTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._assertTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._assetsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._staffDetailsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._studentTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._studentDetailTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._stuDetailsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._userRegisterTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(HostelDBDataSet2 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._assertTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Assert.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._assertTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._assetsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Assets.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._assetsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._staffDetailsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.StaffDetails.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._staffDetailsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._studentTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Student.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._studentTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._studentDetailTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.StudentDetail.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._studentDetailTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._stuDetailsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.StuDetails.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._stuDetailsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._userRegisterTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.UserRegister.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._userRegisterTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(HostelDBDataSet2 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._assertTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Assert.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._assertTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._assetsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Assets.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._assetsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._staffDetailsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.StaffDetails.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._staffDetailsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._studentTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Student.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._studentTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._studentDetailTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.StudentDetail.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._studentDetailTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._stuDetailsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.StuDetails.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._stuDetailsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._userRegisterTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.UserRegister.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._userRegisterTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(HostelDBDataSet2 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._userRegisterTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.UserRegister.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._userRegisterTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._stuDetailsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.StuDetails.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._stuDetailsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._studentDetailTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.StudentDetail.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._studentDetailTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._studentTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Student.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._studentTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._staffDetailsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.StaffDetails.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._staffDetailsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._assetsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Assets.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._assetsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._assertTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Assert.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._assertTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(HostelDBDataSet2 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._assertTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._assertTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._assetsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._assetsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._staffDetailsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._staffDetailsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._studentTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._studentTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._studentDetailTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._studentDetailTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._stuDetailsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._stuDetailsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._userRegisterTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._userRegisterTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._assertTableAdapter != null)) {
                    revertConnections.Add(this._assertTableAdapter, this._assertTableAdapter.Connection);
                    this._assertTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._assertTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._assertTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._assertTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._assertTableAdapter.Adapter);
                    }
                }
                if ((this._assetsTableAdapter != null)) {
                    revertConnections.Add(this._assetsTableAdapter, this._assetsTableAdapter.Connection);
                    this._assetsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._assetsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._assetsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._assetsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._assetsTableAdapter.Adapter);
                    }
                }
                if ((this._staffDetailsTableAdapter != null)) {
                    revertConnections.Add(this._staffDetailsTableAdapter, this._staffDetailsTableAdapter.Connection);
                    this._staffDetailsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._staffDetailsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._staffDetailsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._staffDetailsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._staffDetailsTableAdapter.Adapter);
                    }
                }
                if ((this._studentTableAdapter != null)) {
                    revertConnections.Add(this._studentTableAdapter, this._studentTableAdapter.Connection);
                    this._studentTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._studentTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._studentTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._studentTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._studentTableAdapter.Adapter);
                    }
                }
                if ((this._studentDetailTableAdapter != null)) {
                    revertConnections.Add(this._studentDetailTableAdapter, this._studentDetailTableAdapter.Connection);
                    this._studentDetailTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._studentDetailTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._studentDetailTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._studentDetailTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._studentDetailTableAdapter.Adapter);
                    }
                }
                if ((this._stuDetailsTableAdapter != null)) {
                    revertConnections.Add(this._stuDetailsTableAdapter, this._stuDetailsTableAdapter.Connection);
                    this._stuDetailsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._stuDetailsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._stuDetailsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._stuDetailsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._stuDetailsTableAdapter.Adapter);
                    }
                }
                if ((this._userRegisterTableAdapter != null)) {
                    revertConnections.Add(this._userRegisterTableAdapter, this._userRegisterTableAdapter.Connection);
                    this._userRegisterTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._userRegisterTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._userRegisterTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._userRegisterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._userRegisterTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._assertTableAdapter != null)) {
                    this._assertTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._assertTableAdapter]));
                    this._assertTableAdapter.Transaction = null;
                }
                if ((this._assetsTableAdapter != null)) {
                    this._assetsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._assetsTableAdapter]));
                    this._assetsTableAdapter.Transaction = null;
                }
                if ((this._staffDetailsTableAdapter != null)) {
                    this._staffDetailsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._staffDetailsTableAdapter]));
                    this._staffDetailsTableAdapter.Transaction = null;
                }
                if ((this._studentTableAdapter != null)) {
                    this._studentTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._studentTableAdapter]));
                    this._studentTableAdapter.Transaction = null;
                }
                if ((this._studentDetailTableAdapter != null)) {
                    this._studentDetailTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._studentDetailTableAdapter]));
                    this._studentDetailTableAdapter.Transaction = null;
                }
                if ((this._stuDetailsTableAdapter != null)) {
                    this._stuDetailsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._stuDetailsTableAdapter]));
                    this._stuDetailsTableAdapter.Transaction = null;
                }
                if ((this._userRegisterTableAdapter != null)) {
                    this._userRegisterTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._userRegisterTableAdapter]));
                    this._userRegisterTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591